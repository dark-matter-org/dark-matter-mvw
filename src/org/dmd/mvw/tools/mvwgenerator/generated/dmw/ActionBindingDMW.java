package org.dmd.mvw.tools.mvwgenerator.generated.dmw;

// Generated from: org.dmd.util.codegen.ImportManager.getFormattedImports(ImportManager.java:82)
// Called from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:442)
import org.dmd.dmc.*;                                                         // If any attributes - (BaseDMWGenerator.java:977)
import org.dmd.dmc.types.CamelCaseName;                                       // Is named by - (BaseDMWGenerator.java:939)
import org.dmd.dms.ClassDefinition;                                           // Passing derived class def up the hierarchy - (BaseDMWGenerator.java:944)
import org.dmd.dms.generated.dmo.MetaDMSAG;                                   // Required for MODREC constructor - (BaseDMWGenerator.java:949)
import org.dmd.dms.generated.types.DmcTypeModifierMV;                         // Required for MODREC constructor - (BaseDMWGenerator.java:948)
import org.dmd.mvw.tools.mvwgenerator.extended.Component;                     // Is reference type - (BaseDMWGenerator.java:997)
import org.dmd.mvw.tools.mvwgenerator.extended.MvwDefinition;                 // Derived class - (BaseDMWGenerator.java:1138)
import org.dmd.mvw.tools.mvwgenerator.extended.menus.ActionBinding;           // Required for getModificationRecorder() - (BaseDMWGenerator.java:953)
import org.dmd.mvw.tools.mvwgenerator.generated.dmo.ActionBindingDMO;         // Class not auxiliary or abstract - (BaseDMWGenerator.java:1142)
import org.dmd.mvw.tools.mvwgenerator.generated.types.ComponentREF;           // Is reference type REF - (BaseDMWGenerator.java:1005)



/**
 * The ActionBinding class allows for the definition of an intermediate
 * component that binds\n behavioural triggers e.g. menu items, toolbar
 * buttons etc. to action implementors e.g. Controllers,\n Presenters and
 * Activities. The ActionBinding serves the same purpose as the
 * com.google.gwt.user.client.Command\n interface, but provides some
 * additional useful functionality. The implementation of the ActionBinding
 * (see\n org.dmd.mvw.client.mvwmenus.base.ActionBinding) maintains a set of
 * TriggerIF interfaces, which are the various\n implementations of the menu
 * items, toolbar buttons etc. An implementing component can enable/disable
 * its\n Actions which, in turn, can enable/disable its triggers.
 * <P>
 * Generated from the mvw schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:488)
 */
abstract public class ActionBindingDMW extends MvwDefinition implements DmcNamedObjectIF {

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:577)
    public ActionBindingDMW() {
        super(new ActionBindingDMO(), org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._ActionBinding);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:583)
    public ActionBindingDMW(DmcTypeModifierMV mods) {
        super(new ActionBindingDMO(mods), org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._ActionBinding);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:625)
    public ActionBinding getModificationRecorder(){
        ActionBinding rc = new ActionBinding();
        rc.setActionBindingName(getActionBindingName());
        rc.setModifier(new DmcTypeModifierMV(MetaDMSAG.__modify));
        return(rc);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:646)
    public ActionBindingDMW(ActionBindingDMO obj) {
        super(obj, org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG._ActionBinding);
    }

    public ActionBinding cloneIt() {
        ActionBinding rc = new ActionBinding();
        rc.setDmcObject(getDMO().cloneIt());
        return(rc);
    }

    public ActionBindingDMO getDMO() {
        return((ActionBindingDMO) core);
    }

    // Generated from: org.dmd.dmg.generators.BaseDMWGenerator.dumpWrapper(BaseDMWGenerator.java:661)
    protected ActionBindingDMW(ActionBindingDMO obj, ClassDefinition cd) {
        super(obj,cd);
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.getAccessFunctions(BaseDMWGenerator.java:1187)
    public CamelCaseName getObjectName(){
        return(((ActionBindingDMO) core).getActionBindingName());
    }

    public int hashCode(){
        return(getObjectName().hashCode());
    }

    public DmcAttribute<?> getObjectNameAttribute(){
        return(((ActionBindingDMO) core).getObjectNameAttribute());
    }

    public boolean equals(Object obj){
        if (obj instanceof ActionBindingDMW){
            return( getObjectName().equals( ((ActionBindingDMW) obj).getObjectName()) );
        }
        return(false);
    }

    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1364)
    public CamelCaseName getActionBindingName(){
        return(((ActionBindingDMO) core).getActionBindingName());
    }

    /**
     * Sets actionBindingName to the specified value.
     * @param value A value compatible with DmcTypeCamelCaseName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1474)
    public void setActionBindingName(Object value) throws DmcValueException {
        ((ActionBindingDMO) core).setActionBindingName(value);
    }

    /**
     * Sets actionBindingName to the specified value.
     * @param value CamelCaseName
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1483)
    public void setActionBindingName(CamelCaseName value){
        ((ActionBindingDMO) core).setActionBindingName(value);
    }

    /**
     * Removes the actionBindingName attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1509)
    public void remActionBindingName(){
        ((ActionBindingDMO) core).remActionBindingName();
    }

    /**
     * @return A Component object.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1324)
    public Component getImplementedBy(){
        ComponentREF ref = ((ActionBindingDMO) core).getImplementedBy();
        if (ref == null)
            return(null);
        
        if (ref.getObject() == null)
            return(null);
        
        return((Component)ref.getObject().getContainer());
    }

    /**
     * Sets the implementedBy to the specified value.
     * @param value A value compatible with ComponentREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1409)
    public void setImplementedBy(Component value) {
        ((ActionBindingDMO) core).setImplementedBy(value.getDMO());
    }

    /**
     * Sets the implementedBy to the specified value.
     * @param value A value compatible with ComponentREF
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1418)
    public void setImplementedBy(Object value) throws DmcValueException {
        ((ActionBindingDMO) core).setImplementedBy(value);
    }

    /**
     * Removes the implementedBy attribute value.
     */
    // org.dmd.dmg.generators.BaseDMWGenerator.formatSV(BaseDMWGenerator.java:1509)
    public void remImplementedBy(){
        ((ActionBindingDMO) core).remImplementedBy();
    }


}

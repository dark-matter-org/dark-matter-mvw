package org.dmd.mvw.tools.mvwgenerator.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.mvw.tools.mvwgenerator.generated.dmo.MvwDMSAG;


/**
 * The MVW (Model-View-Whatever) schema defines classes that can be used to
 * model\n aspects of both Model-View-Controller or Model-View-Presenter
 * style applications.
 * <P>
 * Generated from the mvw schema at version 0.1
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:182)
 */
public class MvwSchemaAG extends SchemaDefinition {

    public static ClassDefinition _MvwDefinition;
    public static ClassDefinition _Event;
    public static ClassDefinition _Module;
    public static ClassDefinition _View;
    public static ClassDefinition _Component;
    public static ClassDefinition _Controller;
    public static ClassDefinition _Presenter;
    public static ClassDefinition _Place;
    public static ClassDefinition _SubPlace;
    public static ClassDefinition _Activity;
    public static ClassDefinition _RunContextItem;
    public static ClassDefinition _WebApplication;
    public static ClassDefinition _I18NConfig;
    public static ClassDefinition _MenuImplementationConfig;
    public static ClassDefinition _MenuElementDefinition;
    public static ClassDefinition _Menu;
    public static ClassDefinition _MenuBar;
    public static ClassDefinition _SubMenu;
    public static ClassDefinition _MenuItem;
    public static ClassDefinition _Separator;
    public static ClassDefinition _ActionBinding;
    public static ClassDefinition _FormBindingDefinition;
    public static ClassDefinition _FieldEditorDefinition;
    public static ClassDefinition _FormImplementationConfig;
    public static ClassDefinition _EnumMapping;
    public static ClassDefinition _EnumMappingGenerator;

    public static AttributeDefinition _definedInModule;
    public static AttributeDefinition _firesEvent;
    public static AttributeDefinition _handlesEvent;
    public static AttributeDefinition _argVector;
    public static AttributeDefinition _userDataImport;
    public static AttributeDefinition _dependsOnModule;
    public static AttributeDefinition _selectedDMO;
    public static AttributeDefinition _useBaseClass;
    public static AttributeDefinition _eventName;
    public static AttributeDefinition _moduleName;
    public static AttributeDefinition _componentName;
    public static AttributeDefinition _viewName;
    public static AttributeDefinition _widget;
    public static AttributeDefinition _localEvent;
    public static AttributeDefinition _displayDMO;
    public static AttributeDefinition _selectEvent;
    public static AttributeDefinition _deleteEvent;
    public static AttributeDefinition _clickEvent;
    public static AttributeDefinition _modifyEvent;
    public static AttributeDefinition _createEvent;
    public static AttributeDefinition _broadcast;
    public static AttributeDefinition _broadcastOnly;
    public static AttributeDefinition _presenterMethod;
    public static AttributeDefinition _viewMethod;
    public static AttributeDefinition _useClass;
    public static AttributeDefinition _itemName;
    public static AttributeDefinition _construction;
    public static AttributeDefinition _itemOrder;
    public static AttributeDefinition _contextImpl;
    public static AttributeDefinition _importThis;
    public static AttributeDefinition _local;
    public static AttributeDefinition _appName;
    public static AttributeDefinition _controllerName;
    public static AttributeDefinition _usesRunContextItem;
    public static AttributeDefinition _presenterImport;
    public static AttributeDefinition _viewImport;
    public static AttributeDefinition _sharedImport;
    public static AttributeDefinition _presenterName;
    public static AttributeDefinition _activityName;
    public static AttributeDefinition _managesView;
    public static AttributeDefinition _usesController;
    public static AttributeDefinition _useSchema;
    public static AttributeDefinition _centralDMPErrorHandler;
    public static AttributeDefinition _centralRPCErrorHandler;
    public static AttributeDefinition _placeName;
    public static AttributeDefinition _placePrefix;
    public static AttributeDefinition _runsActivity;
    public static AttributeDefinition _parentPlace;
    public static AttributeDefinition _defaultPlace;
    public static AttributeDefinition _abstractActivity;
    public static AttributeDefinition _addedToRunContext;
    public static AttributeDefinition _instantiatesPresenter;
    public static AttributeDefinition _createOnDemand;
    public static AttributeDefinition _instantiatesView;
    public static AttributeDefinition _singleton;
    public static AttributeDefinition _usingStandardSubpackages;
    public static AttributeDefinition _configName;
    public static AttributeDefinition _defaultMenuBar;
    public static AttributeDefinition _alternateMenuBar;
    public static AttributeDefinition _elementName;
    public static AttributeDefinition _useImpl;
    public static AttributeDefinition _addToMenu;
    public static AttributeDefinition _alwaysEnabled;
    public static AttributeDefinition _menuOrder;
    public static AttributeDefinition _displayLabel;
    public static AttributeDefinition _actionBindingName;
    public static AttributeDefinition _triggersAction;
    public static AttributeDefinition _defaultSubMenu;
    public static AttributeDefinition _alternateSubMenu;
    public static AttributeDefinition _defaultMenuItem;
    public static AttributeDefinition _alternateMenuItem;
    public static AttributeDefinition _implementsAction;
    public static AttributeDefinition _implementedBy;
    public static AttributeDefinition _defaultSeparator;
    public static AttributeDefinition _menuImplementation;
    public static AttributeDefinition _displayLabelI18N;
    public static AttributeDefinition _bindingName;
    public static AttributeDefinition _editObject;
    public static AttributeDefinition _editField;
    public static AttributeDefinition _editorName;
    public static AttributeDefinition _strictlyChecked;
    public static AttributeDefinition _mappingName;
    public static AttributeDefinition _unsetValue;
    public static AttributeDefinition _useNameAsLabel;
    public static AttributeDefinition _useI18NConfig;
    public static AttributeDefinition _tipsFromI18N;
    public static AttributeDefinition _skipEnumValue;
    public static AttributeDefinition _sendsRequest;
    public static AttributeDefinition _autoCreated;
    public static AttributeDefinition _useSingleEditor;
    public static AttributeDefinition _firedInThisModule;
    public static AttributeDefinition _codeSplit;
    public static AttributeDefinition _centralAsyncErrorHandler;
    public static AttributeDefinition _mappingGenerator;
    public static AttributeDefinition _enumGeneratorClass;

    public static TypeDefinition _EventWithArgs;
    public static TypeDefinition _MethodWithArgs;
    public static TypeDefinition _GetWithOptions;
    public static TypeDefinition _RequestWithOptions;
    public static TypeDefinition _RequestTypeWithOptions;
    public static TypeDefinition _EditField;

    public static ComplexTypeDefinition _DisplayDataSpec;
    public static ComplexTypeDefinition _EventSpec;
    public static ComplexTypeDefinition _OperationSpec;
    public static ComplexTypeDefinition _MenuElementTypeAndComment;


    public static EnumDefinition _SelectionTypeEnum;
    public static EnumDefinition _EventScopeEnum;
    public static EnumDefinition _RequestOptionEnum;



    static MvwSchemaAG instance;

    public MvwSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.mvw.tools.mvwgenerator.generated.MvwSchemaAG";

        dependsOnSchemaClasses.put("dmg","org.dmd.dmg.generated.DmgSchemaAG");

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:208)
    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("mvw");
            me.setDotName("mvw");
            me.setSchemaPackage("org.dmd.mvw.tools.mvwgenerator");
            me.setDmwPackage("org.dmd.mvw.tools.mvwgenerator");
            me.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/mvw.dms");


            me.addDependsOn("dmg");
            dependsOnSchemaClasses.put("dmg","org.dmd.dmg.generated.DmgSchemaAG");


            initClasses();
            initAttributes1();
            initTypes();
            initComplexTypes();
            initActions();
            initEnums();
            initRules();
            initDSDModules();
            DmcOmni.instance().addCompactSchema(MvwDMSAG.instance());
        }
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initClasses() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MvwDefinitionOBJ = new ClassDefinitionDMO();
            _MvwDefinition = new ClassDefinition(_MvwDefinitionOBJ,MvwDMSAG.__MvwDefinition);
            _MvwDefinitionOBJ.setName("MvwDefinition");
            _MvwDefinitionOBJ.setDmdID("1601");
            _MvwDefinitionOBJ.setClassType("ABSTRACT");
            _MvwDefinitionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MvwDefinitionOBJ.setLineNumber("14");
            _MvwDefinitionOBJ.setIsNamedBy("meta.camelCaseName");
            _MvwDefinitionOBJ.addDescription("The MvwDefinition class provide a common base for all MVW definition\n classes.");
            _MvwDefinitionOBJ.setUseWrapperType("EXTENDED");
            _MvwDefinitionOBJ.addMust("meta.camelCaseName");
            _MvwDefinitionOBJ.addMust("mvw.definedInModule");
            _MvwDefinitionOBJ.addMay("meta.file");
            _MvwDefinitionOBJ.addMay("meta.lineNumber");
            _MvwDefinitionOBJ.addMay("meta.description");
            _MvwDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MvwDefinitionIterableDMW");
            _MvwDefinitionOBJ.setDmwIteratorClass("MvwDefinitionIterableDMW");
            _MvwDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MvwDefinitionREF");
            _MvwDefinitionOBJ.setDotName("mvw.MvwDefinition.ClassDefinition");
            _MvwDefinition.setDefinedIn(this);
            addClassDefList(_MvwDefinition);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _EventOBJ = new ClassDefinitionDMO();
            _Event = new ClassDefinition(_EventOBJ,MvwDMSAG.__Event);
            _EventOBJ.setName("Event");
            _EventOBJ.setDmdID("1602");
            _EventOBJ.setClassType("STRUCTURAL");
            _EventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _EventOBJ.setLineNumber("28");
            _EventOBJ.setIsNamedBy("mvw.eventName");
            _EventOBJ.addDescription("The specification of an Event definition will result in the creation of\n a gwtEvent and its associated handler interface.");
            _EventOBJ.setUseWrapperType("EXTENDED");
            _EventOBJ.setDerivedFrom("mvw.MvwDefinition");
            _EventOBJ.addMust("mvw.eventName");
            _EventOBJ.addMay("mvw.argVector");
            _EventOBJ.addMay("mvw.importThis");
            _EventOBJ.addMay("mvw.firedInThisModule");
            _EventOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EventIterableDMW");
            _EventOBJ.setDmwIteratorClass("EventIterableDMW");
            _EventOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.EventREF");
            _EventOBJ.setDotName("mvw.Event.ClassDefinition");
            _Event.setDefinedIn(this);
            addClassDefList(_Event);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ModuleOBJ = new ClassDefinitionDMO();
            _Module = new ClassDefinition(_ModuleOBJ,MvwDMSAG.__Module);
            _ModuleOBJ.setName("Module");
            _ModuleOBJ.setDmdID("1603");
            _ModuleOBJ.setClassType("STRUCTURAL");
            _ModuleOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ModuleOBJ.setLineNumber("70");
            _ModuleOBJ.setIsNamedBy("mvw.moduleName");
            _ModuleOBJ.addDescription("The Module is used to define a reusable set of MVW functionality which\n can be referred to in Application definitions or other Module definitions.");
            _ModuleOBJ.setUseWrapperType("EXTENDED");
            _ModuleOBJ.setDerivedFrom("mvw.MvwDefinition");
            _ModuleOBJ.addMust("mvw.moduleName");
            _ModuleOBJ.addMust("dmg.genPackage");
            _ModuleOBJ.addMay("mvw.dependsOnModule");
            _ModuleOBJ.addMay("meta.dependsOnSchema");
            _ModuleOBJ.addMay("mvw.usingStandardSubpackages");
            _ModuleOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ModuleIterableDMW");
            _ModuleOBJ.setDmwIteratorClass("ModuleIterableDMW");
            _ModuleOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ModuleREF");
            _ModuleOBJ.setDotName("mvw.Module.ClassDefinition");
            _Module.setDefinedIn(this);
            addClassDefList(_Module);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ViewOBJ = new ClassDefinitionDMO();
            _View = new ClassDefinition(_ViewOBJ,MvwDMSAG.__View);
            _ViewOBJ.setName("View");
            _ViewOBJ.setDmdID("1604");
            _ViewOBJ.setClassType("STRUCTURAL");
            _ViewOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ViewOBJ.setLineNumber("106");
            _ViewOBJ.setIsNamedBy("mvw.viewName");
            _ViewOBJ.addDescription("The View is used to define the aspects of two kinds of interfaces that\n define the functionality provided by a view of a model; the event interface and the \n data interface.");
            _ViewOBJ.setUseWrapperType("EXTENDED");
            _ViewOBJ.setDerivedFrom("mvw.MvwDefinition");
            _ViewOBJ.addMust("mvw.viewName");
            _ViewOBJ.addMay("mvw.codeSplit");
            _ViewOBJ.addMay("mvw.useBaseClass");
            _ViewOBJ.addMay("mvw.local");
            _ViewOBJ.addMay("mvw.broadcast");
            _ViewOBJ.addMay("mvw.broadcastOnly");
            _ViewOBJ.addMay("mvw.viewImport");
            _ViewOBJ.addMay("mvw.presenterImport");
            _ViewOBJ.addMay("mvw.sharedImport");
            _ViewOBJ.addMay("meta.subpackage");
            _ViewOBJ.addMay("mvw.usesRunContextItem");
            _ViewOBJ.addMay("mvw.widget");
            _ViewOBJ.addMay("meta.extendsInterface");
            _ViewOBJ.addMay("mvw.presenterMethod");
            _ViewOBJ.addMay("mvw.viewMethod");
            _ViewOBJ.addMay("mvw.displayDMO");
            _ViewOBJ.addMay("mvw.selectEvent");
            _ViewOBJ.addMay("mvw.deleteEvent");
            _ViewOBJ.addMay("mvw.clickEvent");
            _ViewOBJ.addMay("mvw.modifyEvent");
            _ViewOBJ.addMay("mvw.createEvent");
            _ViewOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ViewIterableDMW");
            _ViewOBJ.setDmwIteratorClass("ViewIterableDMW");
            _ViewOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ViewREF");
            _ViewOBJ.setDotName("mvw.View.ClassDefinition");
            _View.setDefinedIn(this);
            addClassDefList(_View);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ComponentOBJ = new ClassDefinitionDMO();
            _Component = new ClassDefinition(_ComponentOBJ,MvwDMSAG.__Component);
            _ComponentOBJ.setName("Component");
            _ComponentOBJ.setDmdID("1605");
            _ComponentOBJ.setClassType("ABSTRACT");
            _ComponentOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ComponentOBJ.setLineNumber("145");
            _ComponentOBJ.setIsNamedBy("mvw.componentName");
            _ComponentOBJ.addDescription("Way too long!");
            _ComponentOBJ.setUseWrapperType("EXTENDED");
            _ComponentOBJ.setDerivedFrom("mvw.MvwDefinition");
            _ComponentOBJ.addMust("mvw.componentName");
            _ComponentOBJ.addMay("mvw.firesEvent");
            _ComponentOBJ.addMay("mvw.handlesEvent");
            _ComponentOBJ.addMay("mvw.useSchema");
            _ComponentOBJ.addMay("mvw.useBaseClass");
            _ComponentOBJ.addMay("mvw.usesRunContextItem");
            _ComponentOBJ.addMay("mvw.sendsRequest");
            _ComponentOBJ.addMay("meta.subpackage");
            _ComponentOBJ.addMay("mvw.instantiatesView");
            _ComponentOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ComponentIterableDMW");
            _ComponentOBJ.setDmwIteratorClass("ComponentIterableDMW");
            _ComponentOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ComponentREF");
            _ComponentOBJ.setDotName("mvw.Component.ClassDefinition");
            _Component.setDefinedIn(this);
            addClassDefList(_Component);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ControllerOBJ = new ClassDefinitionDMO();
            _Controller = new ClassDefinition(_ControllerOBJ,MvwDMSAG.__Controller);
            _ControllerOBJ.setName("Controller");
            _ControllerOBJ.setDmdID("1606");
            _ControllerOBJ.setClassType("STRUCTURAL");
            _ControllerOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ControllerOBJ.setLineNumber("179");
            _ControllerOBJ.setIsNamedBy("mvw.controllerName");
            _ControllerOBJ.addDescription("Way too long!");
            _ControllerOBJ.setUseWrapperType("EXTENDED");
            _ControllerOBJ.setDerivedFrom("mvw.Component");
            _ControllerOBJ.addMust("mvw.controllerName");
            _ControllerOBJ.addMay("mvw.centralDMPErrorHandler");
            _ControllerOBJ.addMay("mvw.centralRPCErrorHandler");
            _ControllerOBJ.addMay("mvw.centralAsyncErrorHandler");
            _ControllerOBJ.addMay("mvw.addedToRunContext");
            _ControllerOBJ.addMay("mvw.instantiatesPresenter");
            _ControllerOBJ.addMay("mvw.itemOrder");
            _ControllerOBJ.addMay("mvw.implementsAction");
            _ControllerOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ControllerIterableDMW");
            _ControllerOBJ.setDmwIteratorClass("ControllerIterableDMW");
            _ControllerOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ControllerREF");
            _ControllerOBJ.setDotName("mvw.Controller.ClassDefinition");
            _Controller.setDefinedIn(this);
            addClassDefList(_Controller);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _PresenterOBJ = new ClassDefinitionDMO();
            _Presenter = new ClassDefinition(_PresenterOBJ,MvwDMSAG.__Presenter);
            _PresenterOBJ.setName("Presenter");
            _PresenterOBJ.setDmdID("1607");
            _PresenterOBJ.setClassType("STRUCTURAL");
            _PresenterOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _PresenterOBJ.setLineNumber("198");
            _PresenterOBJ.setIsNamedBy("mvw.presenterName");
            _PresenterOBJ.addDescription("The Presenter is a behavioural component that manages one or more Views and\n thus implements the Presenter interface of any View it manages. Presenters populate and\n potentially update Views with data. This will often involve interacting with the communications\n interface(s) associated with an application. If a View allows the creation or alteration\n of data, those behaviours are usually handled directly by the View's Presenter.");
            _PresenterOBJ.setUseWrapperType("EXTENDED");
            _PresenterOBJ.setDerivedFrom("mvw.Component");
            _PresenterOBJ.addMust("mvw.presenterName");
            _PresenterOBJ.addMust("mvw.managesView");
            _PresenterOBJ.addMay("mvw.codeSplit");
            _PresenterOBJ.addMay("mvw.singleton");
            _PresenterOBJ.addMay("mvw.instantiatesPresenter");
            _PresenterOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.PresenterIterableDMW");
            _PresenterOBJ.setDmwIteratorClass("PresenterIterableDMW");
            _PresenterOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.PresenterREF");
            _PresenterOBJ.setDotName("mvw.Presenter.ClassDefinition");
            _Presenter.setDefinedIn(this);
            addClassDefList(_Presenter);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _PlaceOBJ = new ClassDefinitionDMO();
            _Place = new ClassDefinition(_PlaceOBJ,MvwDMSAG.__Place);
            _PlaceOBJ.setName("Place");
            _PlaceOBJ.setDmdID("1608");
            _PlaceOBJ.setClassType("STRUCTURAL");
            _PlaceOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _PlaceOBJ.setLineNumber("219");
            _PlaceOBJ.setIsNamedBy("mvw.placeName");
            _PlaceOBJ.setUseWrapperType("EXTENDED");
            _PlaceOBJ.setDerivedFrom("mvw.MvwDefinition");
            _PlaceOBJ.addMust("mvw.placeName");
            _PlaceOBJ.addMust("mvw.placePrefix");
            _PlaceOBJ.addMust("mvw.runsActivity");
            _PlaceOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.PlaceIterableDMW");
            _PlaceOBJ.setDmwIteratorClass("PlaceIterableDMW");
            _PlaceOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.PlaceREF");
            _PlaceOBJ.setDotName("mvw.Place.ClassDefinition");
            _Place.setDefinedIn(this);
            addClassDefList(_Place);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _SubPlaceOBJ = new ClassDefinitionDMO();
            _SubPlace = new ClassDefinition(_SubPlaceOBJ,MvwDMSAG.__SubPlace);
            _SubPlaceOBJ.setName("SubPlace");
            _SubPlaceOBJ.setDmdID("1609");
            _SubPlaceOBJ.setClassType("STRUCTURAL");
            _SubPlaceOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SubPlaceOBJ.setLineNumber("230");
            _SubPlaceOBJ.setIsNamedBy("mvw.placeName");
            _SubPlaceOBJ.setUseWrapperType("EXTENDED");
            _SubPlaceOBJ.setDerivedFrom("mvw.Place");
            _SubPlaceOBJ.addMust("mvw.placeName");
            _SubPlaceOBJ.addMust("mvw.placePrefix");
            _SubPlaceOBJ.addMust("mvw.parentPlace");
            _SubPlaceOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SubPlaceIterableDMW");
            _SubPlaceOBJ.setDmwIteratorClass("SubPlaceIterableDMW");
            _SubPlaceOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SubPlaceREF");
            _SubPlaceOBJ.setDotName("mvw.SubPlace.ClassDefinition");
            _SubPlace.setDefinedIn(this);
            addClassDefList(_SubPlace);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ActivityOBJ = new ClassDefinitionDMO();
            _Activity = new ClassDefinition(_ActivityOBJ,MvwDMSAG.__Activity);
            _ActivityOBJ.setName("Activity");
            _ActivityOBJ.setDmdID("1610");
            _ActivityOBJ.setClassType("STRUCTURAL");
            _ActivityOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ActivityOBJ.setLineNumber("263");
            _ActivityOBJ.setIsNamedBy("mvw.activityName");
            _ActivityOBJ.addDescription("Way too long!");
            _ActivityOBJ.setUseWrapperType("EXTENDED");
            _ActivityOBJ.setDerivedFrom("mvw.Component");
            _ActivityOBJ.addMust("mvw.activityName");
            _ActivityOBJ.addMay("mvw.useBaseClass");
            _ActivityOBJ.addMay("mvw.abstractActivity");
            _ActivityOBJ.addMay("mvw.usesController");
            _ActivityOBJ.addMay("mvw.managesView");
            _ActivityOBJ.addMay("mvw.instantiatesPresenter");
            _ActivityOBJ.addMay("mvw.codeSplit");
            _ActivityOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ActivityIterableDMW");
            _ActivityOBJ.setDmwIteratorClass("ActivityIterableDMW");
            _ActivityOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ActivityREF");
            _ActivityOBJ.setDotName("mvw.Activity.ClassDefinition");
            _Activity.setDefinedIn(this);
            addClassDefList(_Activity);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _RunContextItemOBJ = new ClassDefinitionDMO();
            _RunContextItem = new ClassDefinition(_RunContextItemOBJ,MvwDMSAG.__RunContextItem);
            _RunContextItemOBJ.setName("RunContextItem");
            _RunContextItemOBJ.setDmdID("1611");
            _RunContextItemOBJ.setClassType("STRUCTURAL");
            _RunContextItemOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _RunContextItemOBJ.setLineNumber("282");
            _RunContextItemOBJ.setIsNamedBy("mvw.itemName");
            _RunContextItemOBJ.addDescription("The RunContextItem allows for the generation of an overall RunContext for\n a WebApplication or WebSite.");
            _RunContextItemOBJ.setUseWrapperType("EXTENDED");
            _RunContextItemOBJ.setDerivedFrom("mvw.MvwDefinition");
            _RunContextItemOBJ.addMust("mvw.itemName");
            _RunContextItemOBJ.addMust("mvw.useClass");
            _RunContextItemOBJ.addMust("mvw.construction");
            _RunContextItemOBJ.addMay("mvw.itemOrder");
            _RunContextItemOBJ.addMay("mvw.contextImpl");
            _RunContextItemOBJ.addMay("mvw.importThis");
            _RunContextItemOBJ.addMay("mvw.createOnDemand");
            _RunContextItemOBJ.addMay("mvw.singleton");
            _RunContextItemOBJ.addMay("mvw.autoCreated");
            _RunContextItemOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.RunContextItemIterableDMW");
            _RunContextItemOBJ.setDmwIteratorClass("RunContextItemIterableDMW");
            _RunContextItemOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.RunContextItemREF");
            _RunContextItemOBJ.setDotName("mvw.RunContextItem.ClassDefinition");
            _RunContextItem.setDefinedIn(this);
            addClassDefList(_RunContextItem);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _WebApplicationOBJ = new ClassDefinitionDMO();
            _WebApplication = new ClassDefinition(_WebApplicationOBJ,MvwDMSAG.__WebApplication);
            _WebApplicationOBJ.setName("WebApplication");
            _WebApplicationOBJ.setDmdID("1612");
            _WebApplicationOBJ.setClassType("STRUCTURAL");
            _WebApplicationOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _WebApplicationOBJ.setLineNumber("296");
            _WebApplicationOBJ.setIsNamedBy("mvw.appName");
            _WebApplicationOBJ.addDescription("The WebApplication definition allows for the definition of the superstructure\n for an application, basically it's the definition of the overall application controller.");
            _WebApplicationOBJ.setUseWrapperType("EXTENDED");
            _WebApplicationOBJ.setDerivedFrom("mvw.MvwDefinition");
            _WebApplicationOBJ.addMust("mvw.appName");
            _WebApplicationOBJ.addMust("mvw.defaultPlace");
            _WebApplicationOBJ.addMay("mvw.usesController");
            _WebApplicationOBJ.addMay("mvw.menuImplementation");
            _WebApplicationOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.WebApplicationIterableDMW");
            _WebApplicationOBJ.setDmwIteratorClass("WebApplicationIterableDMW");
            _WebApplicationOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.WebApplicationREF");
            _WebApplicationOBJ.setDotName("mvw.WebApplication.ClassDefinition");
            _WebApplication.setDefinedIn(this);
            addClassDefList(_WebApplication);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _I18NConfigOBJ = new ClassDefinitionDMO();
            _I18NConfig = new ClassDefinition(_I18NConfigOBJ,MvwDMSAG.__I18NConfig);
            _I18NConfigOBJ.setName("I18NConfig");
            _I18NConfigOBJ.setDmdID("1614");
            _I18NConfigOBJ.setClassType("STRUCTURAL");
            _I18NConfigOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _I18NConfigOBJ.setLineNumber("307");
            _I18NConfigOBJ.setIsNamedBy("mvw.itemName");
            _I18NConfigOBJ.addDescription("The I18NConfig is a specialized RunContextItem that indicates an interface\n class used to access internationalized constants or messages.");
            _I18NConfigOBJ.setUseWrapperType("EXTENDED");
            _I18NConfigOBJ.setDerivedFrom("mvw.RunContextItem");
            _I18NConfigOBJ.addMust("mvw.itemName");
            _I18NConfigOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.I18NConfigIterableDMW");
            _I18NConfigOBJ.setDmwIteratorClass("I18NConfigIterableDMW");
            _I18NConfigOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.I18NConfigREF");
            _I18NConfigOBJ.setDotName("mvw.I18NConfig.ClassDefinition");
            _I18NConfig.setDefinedIn(this);
            addClassDefList(_I18NConfig);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MenuImplementationConfigOBJ = new ClassDefinitionDMO();
            _MenuImplementationConfig = new ClassDefinition(_MenuImplementationConfigOBJ,MvwDMSAG.__MenuImplementationConfig);
            _MenuImplementationConfigOBJ.setName("MenuImplementationConfig");
            _MenuImplementationConfigOBJ.setDmdID("1615");
            _MenuImplementationConfigOBJ.setClassType("STRUCTURAL");
            _MenuImplementationConfigOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuImplementationConfigOBJ.setLineNumber("330");
            _MenuImplementationConfigOBJ.setIsNamedBy("mvw.configName");
            _MenuImplementationConfigOBJ.addDescription("The MenuImplementationConfig is used to define the various classes that will \n be used to implement an actual menu structure based the MVW menu definitions.\n <p />\n The class specified by useClass must be derived from org.dmd.mvw.client.mvwmenus.base.MvwMenuFactory\n and have a zero arg constructor.");
            _MenuImplementationConfigOBJ.setUseWrapperType("EXTENDED");
            _MenuImplementationConfigOBJ.setDerivedFrom("mvw.MvwDefinition");
            _MenuImplementationConfigOBJ.setSubpackage("menus");
            _MenuImplementationConfigOBJ.addMust("mvw.configName");
            _MenuImplementationConfigOBJ.addMust("mvw.useClass");
            _MenuImplementationConfigOBJ.addMust("mvw.defaultMenuBar");
            _MenuImplementationConfigOBJ.addMust("mvw.defaultSubMenu");
            _MenuImplementationConfigOBJ.addMust("mvw.defaultMenuItem");
            _MenuImplementationConfigOBJ.addMust("mvw.defaultSeparator");
            _MenuImplementationConfigOBJ.addMay("mvw.alternateMenuBar");
            _MenuImplementationConfigOBJ.addMay("mvw.alternateSubMenu");
            _MenuImplementationConfigOBJ.addMay("mvw.alternateMenuItem");
            _MenuImplementationConfigOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuImplementationConfigIterableDMW");
            _MenuImplementationConfigOBJ.setDmwIteratorClass("MenuImplementationConfigIterableDMW");
            _MenuImplementationConfigOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuImplementationConfigREF");
            _MenuImplementationConfigOBJ.setDotName("mvw.MenuImplementationConfig.ClassDefinition");
            _MenuImplementationConfig.setDefinedIn(this);
            addClassDefList(_MenuImplementationConfig);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MenuElementDefinitionOBJ = new ClassDefinitionDMO();
            _MenuElementDefinition = new ClassDefinition(_MenuElementDefinitionOBJ,MvwDMSAG.__MenuElementDefinition);
            _MenuElementDefinitionOBJ.setName("MenuElementDefinition");
            _MenuElementDefinitionOBJ.setDmdID("1616");
            _MenuElementDefinitionOBJ.setClassType("STRUCTURAL");
            _MenuElementDefinitionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuElementDefinitionOBJ.setLineNumber("342");
            _MenuElementDefinitionOBJ.setIsNamedBy("mvw.elementName");
            _MenuElementDefinitionOBJ.addDescription("The MenuElementDefinition is common base for all definitions associated with\n the definition of menu elements.");
            _MenuElementDefinitionOBJ.setDerivedFrom("mvw.MvwDefinition");
            _MenuElementDefinitionOBJ.setSubpackage("menus");
            _MenuElementDefinitionOBJ.addMust("mvw.elementName");
            _MenuElementDefinitionOBJ.addMay("mvw.useImpl");
            _MenuElementDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuElementDefinitionIterableDMW");
            _MenuElementDefinitionOBJ.setDmwIteratorClass("MenuElementDefinitionIterableDMW");
            _MenuElementDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuElementDefinitionREF");
            _MenuElementDefinitionOBJ.setDotName("mvw.MenuElementDefinition.ClassDefinition");
            _MenuElementDefinition.setDefinedIn(this);
            addClassDefList(_MenuElementDefinition);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MenuOBJ = new ClassDefinitionDMO();
            _Menu = new ClassDefinition(_MenuOBJ,MvwDMSAG.__Menu);
            _MenuOBJ.setName("Menu");
            _MenuOBJ.setDmdID("1617");
            _MenuOBJ.setClassType("ABSTRACT");
            _MenuOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuOBJ.setLineNumber("354");
            _MenuOBJ.setIsNamedBy("mvw.elementName");
            _MenuOBJ.addDescription("The Menu is a common base for all definitions associated with\n the definition of menus of different types e.g. toolbars, menubars, popups etc.");
            _MenuOBJ.setUseWrapperType("EXTENDED");
            _MenuOBJ.setDerivedFrom("mvw.MenuElementDefinition");
            _MenuOBJ.setSubpackage("menus");
            _MenuOBJ.addMust("mvw.elementName");
            _MenuOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuIterableDMW");
            _MenuOBJ.setDmwIteratorClass("MenuIterableDMW");
            _MenuOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuREF");
            _MenuOBJ.setDotName("mvw.Menu.ClassDefinition");
            _Menu.setDefinedIn(this);
            addClassDefList(_Menu);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MenuBarOBJ = new ClassDefinitionDMO();
            _MenuBar = new ClassDefinition(_MenuBarOBJ,MvwDMSAG.__MenuBar);
            _MenuBarOBJ.setName("MenuBar");
            _MenuBarOBJ.setDmdID("1618");
            _MenuBarOBJ.setClassType("STRUCTURAL");
            _MenuBarOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuBarOBJ.setLineNumber("366");
            _MenuBarOBJ.setIsNamedBy("mvw.elementName");
            _MenuBarOBJ.addDescription("The MenuImplementationConfig is used to define the various classes that will");
            _MenuBarOBJ.setUseWrapperType("EXTENDED");
            _MenuBarOBJ.setDerivedFrom("mvw.Menu");
            _MenuBarOBJ.setSubpackage("menus");
            _MenuBarOBJ.addMust("mvw.elementName");
            _MenuBarOBJ.addMay("mvw.useImpl");
            _MenuBarOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuBarIterableDMW");
            _MenuBarOBJ.setDmwIteratorClass("MenuBarIterableDMW");
            _MenuBarOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuBarREF");
            _MenuBarOBJ.setDotName("mvw.MenuBar.ClassDefinition");
            _MenuBar.setDefinedIn(this);
            addClassDefList(_MenuBar);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _SubMenuOBJ = new ClassDefinitionDMO();
            _SubMenu = new ClassDefinition(_SubMenuOBJ,MvwDMSAG.__SubMenu);
            _SubMenuOBJ.setName("SubMenu");
            _SubMenuOBJ.setDmdID("1619");
            _SubMenuOBJ.setClassType("STRUCTURAL");
            _SubMenuOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SubMenuOBJ.setLineNumber("382");
            _SubMenuOBJ.setIsNamedBy("mvw.elementName");
            _SubMenuOBJ.addDescription("The SubMenu is used to define a submenu that is included as part of a Menu.");
            _SubMenuOBJ.setUseWrapperType("EXTENDED");
            _SubMenuOBJ.setDerivedFrom("mvw.Menu");
            _SubMenuOBJ.setSubpackage("menus");
            _SubMenuOBJ.addMust("mvw.elementName");
            _SubMenuOBJ.addMust("mvw.addToMenu");
            _SubMenuOBJ.addMust("mvw.menuOrder");
            _SubMenuOBJ.addMay("mvw.displayLabel");
            _SubMenuOBJ.addMay("mvw.displayLabelI18N");
            _SubMenuOBJ.addMay("mvw.useImpl");
            _SubMenuOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SubMenuIterableDMW");
            _SubMenuOBJ.setDmwIteratorClass("SubMenuIterableDMW");
            _SubMenuOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SubMenuREF");
            _SubMenuOBJ.setDotName("mvw.SubMenu.ClassDefinition");
            _SubMenu.setDefinedIn(this);
            addClassDefList(_SubMenu);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _MenuItemOBJ = new ClassDefinitionDMO();
            _MenuItem = new ClassDefinition(_MenuItemOBJ,MvwDMSAG.__MenuItem);
            _MenuItemOBJ.setName("MenuItem");
            _MenuItemOBJ.setDmdID("1620");
            _MenuItemOBJ.setClassType("STRUCTURAL");
            _MenuItemOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _MenuItemOBJ.setLineNumber("401");
            _MenuItemOBJ.setIsNamedBy("mvw.elementName");
            _MenuItemOBJ.addDescription("The MenuItem is used to define triggerable menu items. You must specify\n either a displayLabel or a displayLabelI18N to indicate the label to be used for the\n menu item.");
            _MenuItemOBJ.setUseWrapperType("EXTENDED");
            _MenuItemOBJ.setDerivedFrom("mvw.MenuElementDefinition");
            _MenuItemOBJ.setSubpackage("menus");
            _MenuItemOBJ.addMust("mvw.elementName");
            _MenuItemOBJ.addMust("mvw.triggersAction");
            _MenuItemOBJ.addMust("mvw.addToMenu");
            _MenuItemOBJ.addMust("mvw.menuOrder");
            _MenuItemOBJ.addMay("mvw.displayLabel");
            _MenuItemOBJ.addMay("mvw.displayLabelI18N");
            _MenuItemOBJ.addMay("mvw.useImpl");
            _MenuItemOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MenuItemIterableDMW");
            _MenuItemOBJ.setDmwIteratorClass("MenuItemIterableDMW");
            _MenuItemOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.MenuItemREF");
            _MenuItemOBJ.setDotName("mvw.MenuItem.ClassDefinition");
            _MenuItem.setDefinedIn(this);
            addClassDefList(_MenuItem);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _SeparatorOBJ = new ClassDefinitionDMO();
            _Separator = new ClassDefinition(_SeparatorOBJ,MvwDMSAG.__Separator);
            _SeparatorOBJ.setName("Separator");
            _SeparatorOBJ.setDmdID("1621");
            _SeparatorOBJ.setClassType("STRUCTURAL");
            _SeparatorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _SeparatorOBJ.setLineNumber("415");
            _SeparatorOBJ.setIsNamedBy("mvw.elementName");
            _SeparatorOBJ.addDescription("The Separator is used to define menu separators.");
            _SeparatorOBJ.setUseWrapperType("EXTENDED");
            _SeparatorOBJ.setDerivedFrom("mvw.MenuElementDefinition");
            _SeparatorOBJ.setSubpackage("menus");
            _SeparatorOBJ.addMust("mvw.elementName");
            _SeparatorOBJ.addMust("mvw.addToMenu");
            _SeparatorOBJ.addMust("mvw.menuOrder");
            _SeparatorOBJ.addMay("mvw.useImpl");
            _SeparatorOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.SeparatorIterableDMW");
            _SeparatorOBJ.setDmwIteratorClass("SeparatorIterableDMW");
            _SeparatorOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.SeparatorREF");
            _SeparatorOBJ.setDotName("mvw.Separator.ClassDefinition");
            _Separator.setDefinedIn(this);
            addClassDefList(_Separator);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _ActionBindingOBJ = new ClassDefinitionDMO();
            _ActionBinding = new ClassDefinition(_ActionBindingOBJ,MvwDMSAG.__ActionBinding);
            _ActionBindingOBJ.setName("ActionBinding");
            _ActionBindingOBJ.setDmdID("1622");
            _ActionBindingOBJ.setClassType("STRUCTURAL");
            _ActionBindingOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _ActionBindingOBJ.setLineNumber("433");
            _ActionBindingOBJ.setIsNamedBy("mvw.actionBindingName");
            _ActionBindingOBJ.addDescription("Way too long!");
            _ActionBindingOBJ.setUseWrapperType("EXTENDED");
            _ActionBindingOBJ.setDerivedFrom("mvw.MvwDefinition");
            _ActionBindingOBJ.setSubpackage("menus");
            _ActionBindingOBJ.addMust("mvw.actionBindingName");
            _ActionBindingOBJ.addMay("mvw.implementedBy");
            _ActionBindingOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.ActionBindingIterableDMW");
            _ActionBindingOBJ.setDmwIteratorClass("ActionBindingIterableDMW");
            _ActionBindingOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.ActionBindingREF");
            _ActionBindingOBJ.setDotName("mvw.ActionBinding.ClassDefinition");
            _ActionBinding.setDefinedIn(this);
            addClassDefList(_ActionBinding);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _FormBindingDefinitionOBJ = new ClassDefinitionDMO();
            _FormBindingDefinition = new ClassDefinition(_FormBindingDefinitionOBJ,MvwDMSAG.__FormBindingDefinition);
            _FormBindingDefinitionOBJ.setName("FormBindingDefinition");
            _FormBindingDefinitionOBJ.setDmdID("1623");
            _FormBindingDefinitionOBJ.setClassType("STRUCTURAL");
            _FormBindingDefinitionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _FormBindingDefinitionOBJ.setLineNumber("450");
            _FormBindingDefinitionOBJ.setIsNamedBy("mvw.bindingName");
            _FormBindingDefinitionOBJ.addDescription("The FormBinding class allows for the definition of bindings between DMO attributes\n and the editors that will be used to display and edit their values.");
            _FormBindingDefinitionOBJ.setUseWrapperType("EXTENDED");
            _FormBindingDefinitionOBJ.setDerivedFrom("mvw.MvwDefinition");
            _FormBindingDefinitionOBJ.setSubpackage("forms");
            _FormBindingDefinitionOBJ.addMust("mvw.bindingName");
            _FormBindingDefinitionOBJ.addMust("mvw.editObject");
            _FormBindingDefinitionOBJ.addMust("mvw.editField");
            _FormBindingDefinitionOBJ.addMay("mvw.strictlyChecked");
            _FormBindingDefinitionOBJ.addMay("mvw.useI18NConfig");
            _FormBindingDefinitionOBJ.addMay("mvw.tipsFromI18N");
            _FormBindingDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.FormBindingDefinitionIterableDMW");
            _FormBindingDefinitionOBJ.setDmwIteratorClass("FormBindingDefinitionIterableDMW");
            _FormBindingDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.FormBindingDefinitionREF");
            _FormBindingDefinitionOBJ.setDotName("mvw.FormBindingDefinition.ClassDefinition");
            _FormBindingDefinition.setDefinedIn(this);
            addClassDefList(_FormBindingDefinition);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _FieldEditorDefinitionOBJ = new ClassDefinitionDMO();
            _FieldEditorDefinition = new ClassDefinition(_FieldEditorDefinitionOBJ,MvwDMSAG.__FieldEditorDefinition);
            _FieldEditorDefinitionOBJ.setName("FieldEditorDefinition");
            _FieldEditorDefinitionOBJ.setDmdID("1624");
            _FieldEditorDefinitionOBJ.setClassType("STRUCTURAL");
            _FieldEditorDefinitionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _FieldEditorDefinitionOBJ.setLineNumber("471");
            _FieldEditorDefinitionOBJ.setIsNamedBy("mvw.editorName");
            _FieldEditorDefinitionOBJ.addDescription("Way too long!");
            _FieldEditorDefinitionOBJ.setUseWrapperType("EXTENDED");
            _FieldEditorDefinitionOBJ.setDerivedFrom("mvw.MvwDefinition");
            _FieldEditorDefinitionOBJ.setSubpackage("forms");
            _FieldEditorDefinitionOBJ.addMust("mvw.editorName");
            _FieldEditorDefinitionOBJ.addMust("mvw.useClass");
            _FieldEditorDefinitionOBJ.addMay("mvw.useSingleEditor");
            _FieldEditorDefinitionOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.FieldEditorDefinitionIterableDMW");
            _FieldEditorDefinitionOBJ.setDmwIteratorClass("FieldEditorDefinitionIterableDMW");
            _FieldEditorDefinitionOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.FieldEditorDefinitionREF");
            _FieldEditorDefinitionOBJ.setDotName("mvw.FieldEditorDefinition.ClassDefinition");
            _FieldEditorDefinition.setDefinedIn(this);
            addClassDefList(_FieldEditorDefinition);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _FormImplementationConfigOBJ = new ClassDefinitionDMO();
            _FormImplementationConfig = new ClassDefinition(_FormImplementationConfigOBJ,MvwDMSAG.__FormImplementationConfig);
            _FormImplementationConfigOBJ.setName("FormImplementationConfig");
            _FormImplementationConfigOBJ.setDmdID("1625");
            _FormImplementationConfigOBJ.setClassType("STRUCTURAL");
            _FormImplementationConfigOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _FormImplementationConfigOBJ.setLineNumber("483");
            _FormImplementationConfigOBJ.setIsNamedBy("mvw.configName");
            _FormImplementationConfigOBJ.addDescription("The");
            _FormImplementationConfigOBJ.setUseWrapperType("EXTENDED");
            _FormImplementationConfigOBJ.setDerivedFrom("mvw.MvwDefinition");
            _FormImplementationConfigOBJ.setSubpackage("forms");
            _FormImplementationConfigOBJ.addMust("mvw.configName");
            _FormImplementationConfigOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.FormImplementationConfigIterableDMW");
            _FormImplementationConfigOBJ.setDmwIteratorClass("FormImplementationConfigIterableDMW");
            _FormImplementationConfigOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.FormImplementationConfigREF");
            _FormImplementationConfigOBJ.setDotName("mvw.FormImplementationConfig.ClassDefinition");
            _FormImplementationConfig.setDefinedIn(this);
            addClassDefList(_FormImplementationConfig);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _EnumMappingOBJ = new ClassDefinitionDMO();
            _EnumMapping = new ClassDefinition(_EnumMappingOBJ,MvwDMSAG.__EnumMapping);
            _EnumMappingOBJ.setName("EnumMapping");
            _EnumMappingOBJ.setDmdID("1626");
            _EnumMappingOBJ.setClassType("STRUCTURAL");
            _EnumMappingOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _EnumMappingOBJ.setLineNumber("509");
            _EnumMappingOBJ.setIsNamedBy("mvw.mappingName");
            _EnumMappingOBJ.addDescription("Way too long!");
            _EnumMappingOBJ.setUseWrapperType("EXTENDED");
            _EnumMappingOBJ.setDerivedFrom("mvw.MvwDefinition");
            _EnumMappingOBJ.setSubpackage("forms");
            _EnumMappingOBJ.addMust("mvw.mappingName");
            _EnumMappingOBJ.addMust("meta.enumName");
            _EnumMappingOBJ.addMust("mvw.unsetValue");
            _EnumMappingOBJ.addMust("mvw.mappingGenerator");
            _EnumMappingOBJ.addMay("mvw.useNameAsLabel");
            _EnumMappingOBJ.addMay("mvw.skipEnumValue");
            _EnumMappingOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EnumMappingIterableDMW");
            _EnumMappingOBJ.setDmwIteratorClass("EnumMappingIterableDMW");
            _EnumMappingOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.EnumMappingREF");
            _EnumMappingOBJ.setDotName("mvw.EnumMapping.ClassDefinition");
            _EnumMapping.setDefinedIn(this);
            addClassDefList(_EnumMapping);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _EnumMappingGeneratorOBJ = new ClassDefinitionDMO();
            _EnumMappingGenerator = new ClassDefinition(_EnumMappingGeneratorOBJ,MvwDMSAG.__EnumMappingGenerator);
            _EnumMappingGeneratorOBJ.setName("EnumMappingGenerator");
            _EnumMappingGeneratorOBJ.setDmdID("1627");
            _EnumMappingGeneratorOBJ.setClassType("STRUCTURAL");
            _EnumMappingGeneratorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/classes.dmd");
            _EnumMappingGeneratorOBJ.setLineNumber("521");
            _EnumMappingGeneratorOBJ.setIsNamedBy("meta.camelCaseName");
            _EnumMappingGeneratorOBJ.addDescription("The EnumMappingGenerator definition allows for the specification of code\n generation extension that generates enum mapping code for a particular widget set.");
            _EnumMappingGeneratorOBJ.setUseWrapperType("EXTENDED");
            _EnumMappingGeneratorOBJ.setDerivedFrom("mvw.MvwDefinition");
            _EnumMappingGeneratorOBJ.addMust("meta.camelCaseName");
            _EnumMappingGeneratorOBJ.addMust("mvw.enumGeneratorClass");
            _EnumMappingGeneratorOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EnumMappingGeneratorIterableDMW");
            _EnumMappingGeneratorOBJ.setDmwIteratorClass("EnumMappingGeneratorIterableDMW");
            _EnumMappingGeneratorOBJ.setDmtREFImport("org.dmd.mvw.tools.mvwgenerator.generated.types.EnumMappingGeneratorREF");
            _EnumMappingGeneratorOBJ.setDotName("mvw.EnumMappingGenerator.ClassDefinition");
            _EnumMappingGenerator.setDefinedIn(this);
            addClassDefList(_EnumMappingGenerator);

    }

    private void initAttributes1() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _definedInModuleOBJ = new AttributeDefinitionDMO();
            _definedInModule = new AttributeDefinition(_definedInModuleOBJ);
            _definedInModuleOBJ.addDescription("All MvwDefinitions are defined in an Module file that\n ends with a .mvw extension.");
            _definedInModuleOBJ.setName("definedInModule");
            _definedInModuleOBJ.setDmdID("800");
            _definedInModuleOBJ.setType("mvw.Module");
            _definedInModuleOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _definedInModuleOBJ.setDotName("mvw.definedInModule.AttributeDefinition");
            _definedInModuleOBJ.setLineNumber("7");
            _definedInModule.setDefinedIn(this);
            addAttributeDefList(_definedInModule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _firesEventOBJ = new AttributeDefinitionDMO();
            _firesEvent = new AttributeDefinition(_firesEventOBJ);
            _firesEventOBJ.addDescription("Indicates the MvwEvents that are fired by various MVW components.");
            _firesEventOBJ.setName("firesEvent");
            _firesEventOBJ.setDmdID("801");
            _firesEventOBJ.setType("mvw.Event");
            _firesEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _firesEventOBJ.setDotName("mvw.firesEvent.AttributeDefinition");
            _firesEventOBJ.setLineNumber("14");
            _firesEventOBJ.setValueType("TREEMAPPED");
            _firesEvent.setDefinedIn(this);
            addAttributeDefList(_firesEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _handlesEventOBJ = new AttributeDefinitionDMO();
            _handlesEvent = new AttributeDefinition(_handlesEventOBJ);
            _handlesEventOBJ.addDescription("This attributes holds a list of MvwEvents that are\n handled by various MVW components.");
            _handlesEventOBJ.setName("handlesEvent");
            _handlesEventOBJ.setDmdID("802");
            _handlesEventOBJ.setType("mvw.Event");
            _handlesEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _handlesEventOBJ.setDotName("mvw.handlesEvent.AttributeDefinition");
            _handlesEventOBJ.setLineNumber("22");
            _handlesEventOBJ.setValueType("TREEMAPPED");
            _handlesEvent.setDefinedIn(this);
            addAttributeDefList(_handlesEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _argVectorOBJ = new AttributeDefinitionDMO();
            _argVector = new AttributeDefinition(_argVectorOBJ);
            _argVectorOBJ.addDescription("Indicates an argument vector for an event or interface.");
            _argVectorOBJ.setName("argVector");
            _argVectorOBJ.setDmdID("803");
            _argVectorOBJ.setType("meta.String");
            _argVectorOBJ.setNullReturnValue("()");
            _argVectorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _argVectorOBJ.setDotName("mvw.argVector.AttributeDefinition");
            _argVectorOBJ.setLineNumber("41");
            _argVector.setDefinedIn(this);
            addAttributeDefList(_argVector);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _userDataImportOBJ = new AttributeDefinitionDMO();
            _userDataImport = new AttributeDefinition(_userDataImportOBJ);
            _userDataImportOBJ.addDescription("The additionalImport attribute indicates the fully qualified class names\n of types that are required to support your userDataType indications. You need not explicitly\n indicate Java native types such as String, Integer etc. but you will have to specify\n things like java.util.TreeMap.");
            _userDataImportOBJ.setName("userDataImport");
            _userDataImportOBJ.setDmdID("804");
            _userDataImportOBJ.setType("meta.String");
            _userDataImportOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _userDataImportOBJ.setDotName("mvw.userDataImport.AttributeDefinition");
            _userDataImportOBJ.setLineNumber("51");
            _userDataImportOBJ.setValueType("TREESET");
            _userDataImport.setDefinedIn(this);
            addAttributeDefList(_userDataImport);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _dependsOnModuleOBJ = new AttributeDefinitionDMO();
            _dependsOnModule = new AttributeDefinition(_dependsOnModuleOBJ);
            _dependsOnModuleOBJ.addDescription("This attribute allows a Module to refer to other Modules\n on which it depends.");
            _dependsOnModuleOBJ.setName("dependsOnModule");
            _dependsOnModuleOBJ.setDmdID("805");
            _dependsOnModuleOBJ.setType("meta.String");
            _dependsOnModuleOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _dependsOnModuleOBJ.setDotName("mvw.dependsOnModule.AttributeDefinition");
            _dependsOnModuleOBJ.setLineNumber("59");
            _dependsOnModuleOBJ.setValueType("TREESET");
            _dependsOnModule.setDefinedIn(this);
            addAttributeDefList(_dependsOnModule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _selectedDMOOBJ = new AttributeDefinitionDMO();
            _selectedDMO = new AttributeDefinition(_selectedDMOOBJ);
            _selectedDMOOBJ.addDescription("This attribute indicates the class of DMO that is selected by a \n SingleDMOSelectedEvent.");
            _selectedDMOOBJ.setName("selectedDMO");
            _selectedDMOOBJ.setDmdID("806");
            _selectedDMOOBJ.setType("meta.ClassDefinition");
            _selectedDMOOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _selectedDMOOBJ.setDotName("mvw.selectedDMO.AttributeDefinition");
            _selectedDMOOBJ.setLineNumber("66");
            _selectedDMO.setDefinedIn(this);
            addAttributeDefList(_selectedDMO);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useBaseClassOBJ = new AttributeDefinitionDMO();
            _useBaseClass = new AttributeDefinition(_useBaseClassOBJ);
            _useBaseClassOBJ.addDescription("The useBaseClass attribute is used to specify the class from which a\n generated component class should be derived. It should be fully qualified name of a\n class.");
            _useBaseClassOBJ.setName("useBaseClass");
            _useBaseClassOBJ.setDmdID("807");
            _useBaseClassOBJ.setType("meta.String");
            _useBaseClassOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useBaseClassOBJ.setDotName("mvw.useBaseClass.AttributeDefinition");
            _useBaseClassOBJ.setLineNumber("74");
            _useBaseClass.setDefinedIn(this);
            addAttributeDefList(_useBaseClass);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _eventNameOBJ = new AttributeDefinitionDMO();
            _eventName = new AttributeDefinition(_eventNameOBJ);
            _eventNameOBJ.addDescription("The name of an event.");
            _eventNameOBJ.setName("eventName");
            _eventNameOBJ.setDmdID("809");
            _eventNameOBJ.setType("meta.CamelCaseName");
            _eventNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _eventNameOBJ.setDotName("mvw.eventName.AttributeDefinition");
            _eventNameOBJ.setLineNumber("88");
            _eventName.setDefinedIn(this);
            addAttributeDefList(_eventName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _moduleNameOBJ = new AttributeDefinitionDMO();
            _moduleName = new AttributeDefinition(_moduleNameOBJ);
            _moduleNameOBJ.addDescription("The name of a module.");
            _moduleNameOBJ.setName("moduleName");
            _moduleNameOBJ.setDmdID("810");
            _moduleNameOBJ.setType("meta.CamelCaseName");
            _moduleNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _moduleNameOBJ.setDotName("mvw.moduleName.AttributeDefinition");
            _moduleNameOBJ.setLineNumber("94");
            _moduleName.setDefinedIn(this);
            addAttributeDefList(_moduleName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _componentNameOBJ = new AttributeDefinitionDMO();
            _componentName = new AttributeDefinition(_componentNameOBJ);
            _componentNameOBJ.addDescription("The name of a component.");
            _componentNameOBJ.setName("componentName");
            _componentNameOBJ.setDmdID("811");
            _componentNameOBJ.setType("meta.CamelCaseName");
            _componentNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _componentNameOBJ.setDotName("mvw.componentName.AttributeDefinition");
            _componentNameOBJ.setLineNumber("100");
            _componentName.setDefinedIn(this);
            addAttributeDefList(_componentName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _viewNameOBJ = new AttributeDefinitionDMO();
            _viewName = new AttributeDefinition(_viewNameOBJ);
            _viewNameOBJ.addDescription("The name of a View.");
            _viewNameOBJ.setName("viewName");
            _viewNameOBJ.setDmdID("812");
            _viewNameOBJ.setType("meta.CamelCaseName");
            _viewNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewNameOBJ.setDotName("mvw.viewName.AttributeDefinition");
            _viewNameOBJ.setLineNumber("106");
            _viewName.setDefinedIn(this);
            addAttributeDefList(_viewName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _widgetOBJ = new AttributeDefinitionDMO();
            _widget = new AttributeDefinition(_widgetOBJ);
            _widgetOBJ.addDescription("Indicates if a View interface extends IsWidget. This defaults to true because\n most of our views will be displayed in a manner where implementing IsWidget is useful.");
            _widgetOBJ.setName("widget");
            _widgetOBJ.setDmdID("813");
            _widgetOBJ.setType("meta.Boolean");
            _widgetOBJ.setNullReturnValue("true");
            _widgetOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _widgetOBJ.setDotName("mvw.widget.AttributeDefinition");
            _widgetOBJ.setLineNumber("114");
            _widget.setDefinedIn(this);
            addAttributeDefList(_widget);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _localEventOBJ = new AttributeDefinitionDMO();
            _localEvent = new AttributeDefinition(_localEventOBJ);
            _localEventOBJ.addDescription("Indicates a local event name. An example would be localEvent deleteButtonClicked, \n which would result in a method named onDeleteButtonClicked() to be created for the Presenter interface.\n <P>\n If there are arguments associated with the event, use the form: deleteButtonClicked (ContactDMO contact)");
            _localEventOBJ.setName("localEvent");
            _localEventOBJ.setDmdID("814");
            _localEventOBJ.setType("mvw.EventWithArgs");
            _localEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _localEventOBJ.setDotName("mvw.localEvent.AttributeDefinition");
            _localEventOBJ.setLineNumber("123");
            _localEvent.setDefinedIn(this);
            addAttributeDefList(_localEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _displayDMOOBJ = new AttributeDefinitionDMO();
            _displayDMO = new AttributeDefinition(_displayDMOOBJ);
            _displayDMOOBJ.addDescription("Indicates data to be displayed in a View. The attributes takes the form\n Class SINGLE|MULTI varname.");
            _displayDMOOBJ.setName("displayDMO");
            _displayDMOOBJ.setDmdID("816");
            _displayDMOOBJ.setType("mvw.DisplayDataSpec");
            _displayDMOOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayDMOOBJ.setDotName("mvw.displayDMO.AttributeDefinition");
            _displayDMOOBJ.setLineNumber("137");
            _displayDMOOBJ.setValueType("MULTI");
            _displayDMO.setDefinedIn(this);
            addAttributeDefList(_displayDMO);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _selectEventOBJ = new AttributeDefinitionDMO();
            _selectEvent = new AttributeDefinition(_selectEventOBJ);
            _selectEventOBJ.addDescription("Indicates type of events to be generated when data is selected.");
            _selectEventOBJ.setName("selectEvent");
            _selectEventOBJ.setDmdID("817");
            _selectEventOBJ.setType("mvw.EventSpec");
            _selectEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _selectEventOBJ.setDotName("mvw.selectEvent.AttributeDefinition");
            _selectEventOBJ.setLineNumber("144");
            _selectEventOBJ.setValueType("MULTI");
            _selectEvent.setDefinedIn(this);
            addAttributeDefList(_selectEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _deleteEventOBJ = new AttributeDefinitionDMO();
            _deleteEvent = new AttributeDefinition(_deleteEventOBJ);
            _deleteEventOBJ.addDescription("Indicates type of events to be generated when data is deleted.");
            _deleteEventOBJ.setName("deleteEvent");
            _deleteEventOBJ.setDmdID("818");
            _deleteEventOBJ.setType("mvw.EventSpec");
            _deleteEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _deleteEventOBJ.setDotName("mvw.deleteEvent.AttributeDefinition");
            _deleteEventOBJ.setLineNumber("151");
            _deleteEventOBJ.setValueType("MULTI");
            _deleteEvent.setDefinedIn(this);
            addAttributeDefList(_deleteEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _clickEventOBJ = new AttributeDefinitionDMO();
            _clickEvent = new AttributeDefinition(_clickEventOBJ);
            _clickEventOBJ.addDescription("Indicates type of event to be generated when an object is clicked.");
            _clickEventOBJ.setName("clickEvent");
            _clickEventOBJ.setDmdID("819");
            _clickEventOBJ.setType("mvw.OperationSpec");
            _clickEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _clickEventOBJ.setDotName("mvw.clickEvent.AttributeDefinition");
            _clickEventOBJ.setLineNumber("158");
            _clickEventOBJ.setValueType("MULTI");
            _clickEvent.setDefinedIn(this);
            addAttributeDefList(_clickEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _modifyEventOBJ = new AttributeDefinitionDMO();
            _modifyEvent = new AttributeDefinition(_modifyEventOBJ);
            _modifyEventOBJ.addDescription("Indicates type of event to be generated when an object is modified.");
            _modifyEventOBJ.setName("modifyEvent");
            _modifyEventOBJ.setDmdID("820");
            _modifyEventOBJ.setType("mvw.OperationSpec");
            _modifyEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _modifyEventOBJ.setDotName("mvw.modifyEvent.AttributeDefinition");
            _modifyEventOBJ.setLineNumber("164");
            _modifyEvent.setDefinedIn(this);
            addAttributeDefList(_modifyEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _createEventOBJ = new AttributeDefinitionDMO();
            _createEvent = new AttributeDefinition(_createEventOBJ);
            _createEventOBJ.addDescription("Indicates type of event to be generated when an object is created.");
            _createEventOBJ.setName("createEvent");
            _createEventOBJ.setDmdID("821");
            _createEventOBJ.setType("mvw.OperationSpec");
            _createEventOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _createEventOBJ.setDotName("mvw.createEvent.AttributeDefinition");
            _createEventOBJ.setLineNumber("170");
            _createEvent.setDefinedIn(this);
            addAttributeDefList(_createEvent);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _broadcastOBJ = new AttributeDefinitionDMO();
            _broadcast = new AttributeDefinition(_broadcastOBJ);
            _broadcastOBJ.addDescription("Indicates an event that a View will first call on its Presenter interface and then\n broadcast on the event bus.");
            _broadcastOBJ.setName("broadcast");
            _broadcastOBJ.setDmdID("822");
            _broadcastOBJ.setType("mvw.Event");
            _broadcastOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _broadcastOBJ.setDotName("mvw.broadcast.AttributeDefinition");
            _broadcastOBJ.setLineNumber("178");
            _broadcastOBJ.setValueType("MULTI");
            _broadcast.setDefinedIn(this);
            addAttributeDefList(_broadcast);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _broadcastOnlyOBJ = new AttributeDefinitionDMO();
            _broadcastOnly = new AttributeDefinition(_broadcastOnlyOBJ);
            _broadcastOnlyOBJ.addDescription("Indicates an event tha a View will broadcast only on the event bus; it is not \n sent to its presenter.");
            _broadcastOnlyOBJ.setName("broadcastOnly");
            _broadcastOnlyOBJ.setDmdID("823");
            _broadcastOnlyOBJ.setType("mvw.Event");
            _broadcastOnlyOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _broadcastOnlyOBJ.setDotName("mvw.broadcastOnly.AttributeDefinition");
            _broadcastOnlyOBJ.setLineNumber("187");
            _broadcastOnlyOBJ.setValueType("MULTI");
            _broadcastOnly.setDefinedIn(this);
            addAttributeDefList(_broadcastOnly);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _presenterMethodOBJ = new AttributeDefinitionDMO();
            _presenterMethod = new AttributeDefinition(_presenterMethodOBJ);
            _presenterMethodOBJ.addDescription("Indicates a local function name (on the Presenter), optionally followed by an argument vector\n and, if required fully qualified class names.");
            _presenterMethodOBJ.setName("presenterMethod");
            _presenterMethodOBJ.setDmdID("824");
            _presenterMethodOBJ.setType("mvw.MethodWithArgs");
            _presenterMethodOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterMethodOBJ.setDotName("mvw.presenterMethod.AttributeDefinition");
            _presenterMethodOBJ.setLineNumber("195");
            _presenterMethodOBJ.setValueType("MULTI");
            _presenterMethod.setDefinedIn(this);
            addAttributeDefList(_presenterMethod);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _viewMethodOBJ = new AttributeDefinitionDMO();
            _viewMethod = new AttributeDefinition(_viewMethodOBJ);
            _viewMethodOBJ.addDescription("Indicates a local function name (on the View), optionally followed by an argument vector\n and, if required fully qualified class names.");
            _viewMethodOBJ.setName("viewMethod");
            _viewMethodOBJ.setDmdID("825");
            _viewMethodOBJ.setType("mvw.MethodWithArgs");
            _viewMethodOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewMethodOBJ.setDotName("mvw.viewMethod.AttributeDefinition");
            _viewMethodOBJ.setLineNumber("203");
            _viewMethodOBJ.setValueType("MULTI");
            _viewMethod.setDefinedIn(this);
            addAttributeDefList(_viewMethod);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useClassOBJ = new AttributeDefinitionDMO();
            _useClass = new AttributeDefinition(_useClassOBJ);
            _useClassOBJ.addDescription("The fully qualified class name of a RunContextItem.");
            _useClassOBJ.setName("useClass");
            _useClassOBJ.setDmdID("826");
            _useClassOBJ.setType("meta.String");
            _useClassOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useClassOBJ.setDotName("mvw.useClass.AttributeDefinition");
            _useClassOBJ.setLineNumber("209");
            _useClass.setDefinedIn(this);
            addAttributeDefList(_useClass);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _itemNameOBJ = new AttributeDefinitionDMO();
            _itemName = new AttributeDefinition(_itemNameOBJ);
            _itemNameOBJ.addDescription("The name of a RunContextItem.");
            _itemNameOBJ.setName("itemName");
            _itemNameOBJ.setDmdID("827");
            _itemNameOBJ.setType("meta.CamelCaseName");
            _itemNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _itemNameOBJ.setDotName("mvw.itemName.AttributeDefinition");
            _itemNameOBJ.setLineNumber("215");
            _itemName.setDefinedIn(this);
            addAttributeDefList(_itemName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _constructionOBJ = new AttributeDefinitionDMO();
            _construction = new AttributeDefinition(_constructionOBJ);
            _constructionOBJ.addDescription("The statement used to construct the RunContextItem instance.");
            _constructionOBJ.setName("construction");
            _constructionOBJ.setDmdID("828");
            _constructionOBJ.setType("meta.String");
            _constructionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _constructionOBJ.setDotName("mvw.construction.AttributeDefinition");
            _constructionOBJ.setLineNumber("221");
            _construction.setDefinedIn(this);
            addAttributeDefList(_construction);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _itemOrderOBJ = new AttributeDefinitionDMO();
            _itemOrder = new AttributeDefinition(_itemOrderOBJ);
            _itemOrderOBJ.addDescription("The order in which a RunContextItem should be instantiated.");
            _itemOrderOBJ.setName("itemOrder");
            _itemOrderOBJ.setDmdID("829");
            _itemOrderOBJ.setType("meta.Integer");
            _itemOrderOBJ.setNullReturnValue("50");
            _itemOrderOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _itemOrderOBJ.setDotName("mvw.itemOrder.AttributeDefinition");
            _itemOrderOBJ.setLineNumber("228");
            _itemOrder.setDefinedIn(this);
            addAttributeDefList(_itemOrder);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _contextImplOBJ = new AttributeDefinitionDMO();
            _contextImpl = new AttributeDefinition(_contextImplOBJ);
            _contextImplOBJ.addDescription("The context implementation in which this RunContextItem definition\n should be used. All items are part of the Default implementation, but if you need\n other implementations, just respecify the item with different useClass and/or\n different construction syntax.");
            _contextImplOBJ.setName("contextImpl");
            _contextImplOBJ.setDmdID("830");
            _contextImplOBJ.setType("meta.String");
            _contextImplOBJ.setNullReturnValue("Default");
            _contextImplOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _contextImplOBJ.setDotName("mvw.contextImpl.AttributeDefinition");
            _contextImplOBJ.setLineNumber("238");
            _contextImpl.setDefinedIn(this);
            addAttributeDefList(_contextImpl);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _importThisOBJ = new AttributeDefinitionDMO();
            _importThis = new AttributeDefinition(_importThisOBJ);
            _importThisOBJ.addDescription("Allows for the specification of other import statements in various definitions.");
            _importThisOBJ.setName("importThis");
            _importThisOBJ.setDmdID("831");
            _importThisOBJ.setType("meta.String");
            _importThisOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _importThisOBJ.setDotName("mvw.importThis.AttributeDefinition");
            _importThisOBJ.setLineNumber("245");
            _importThisOBJ.setValueType("TREESET");
            _importThis.setDefinedIn(this);
            addAttributeDefList(_importThis);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _localOBJ = new AttributeDefinitionDMO();
            _local = new AttributeDefinition(_localOBJ);
            _localOBJ.addDescription("Indicates that a View fires a local event to its Presenter. This is shorthand\n for a call to a member function on the Presenter.");
            _localOBJ.setName("local");
            _localOBJ.setDmdID("832");
            _localOBJ.setType("mvw.Event");
            _localOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _localOBJ.setDotName("mvw.local.AttributeDefinition");
            _localOBJ.setLineNumber("253");
            _localOBJ.setValueType("TREESET");
            _local.setDefinedIn(this);
            addAttributeDefList(_local);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _appNameOBJ = new AttributeDefinitionDMO();
            _appName = new AttributeDefinition(_appNameOBJ);
            _appNameOBJ.addDescription("The name of an application.");
            _appNameOBJ.setName("appName");
            _appNameOBJ.setDmdID("833");
            _appNameOBJ.setType("meta.CamelCaseName");
            _appNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _appNameOBJ.setDotName("mvw.appName.AttributeDefinition");
            _appNameOBJ.setLineNumber("259");
            _appName.setDefinedIn(this);
            addAttributeDefList(_appName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _controllerNameOBJ = new AttributeDefinitionDMO();
            _controllerName = new AttributeDefinition(_controllerNameOBJ);
            _controllerNameOBJ.addDescription("The name of a controller.");
            _controllerNameOBJ.setName("controllerName");
            _controllerNameOBJ.setDmdID("834");
            _controllerNameOBJ.setType("meta.CamelCaseName");
            _controllerNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _controllerNameOBJ.setDotName("mvw.controllerName.AttributeDefinition");
            _controllerNameOBJ.setLineNumber("265");
            _controllerName.setDefinedIn(this);
            addAttributeDefList(_controllerName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _usesRunContextItemOBJ = new AttributeDefinitionDMO();
            _usesRunContextItem = new AttributeDefinition(_usesRunContextItemOBJ);
            _usesRunContextItemOBJ.addDescription("Indicates a RunContextItem on which something depends. This implies that the \n entity must have the overall run context injected at construction time. Run context items are \n represented as private final members of the generated base implementation of the entity and\n are assigned from the run context.");
            _usesRunContextItemOBJ.setName("usesRunContextItem");
            _usesRunContextItemOBJ.setDmdID("835");
            _usesRunContextItemOBJ.setType("mvw.RunContextItem");
            _usesRunContextItemOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usesRunContextItemOBJ.setDotName("mvw.usesRunContextItem.AttributeDefinition");
            _usesRunContextItemOBJ.setLineNumber("275");
            _usesRunContextItemOBJ.setValueType("TREESET");
            _usesRunContextItem.setDefinedIn(this);
            addAttributeDefList(_usesRunContextItem);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _presenterImportOBJ = new AttributeDefinitionDMO();
            _presenterImport = new AttributeDefinition(_presenterImportOBJ);
            _presenterImportOBJ.addDescription("Indicates an import required by the Presenter interface of a View.");
            _presenterImportOBJ.setName("presenterImport");
            _presenterImportOBJ.setDmdID("836");
            _presenterImportOBJ.setType("meta.String");
            _presenterImportOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterImportOBJ.setDotName("mvw.presenterImport.AttributeDefinition");
            _presenterImportOBJ.setLineNumber("282");
            _presenterImportOBJ.setValueType("TREESET");
            _presenterImport.setDefinedIn(this);
            addAttributeDefList(_presenterImport);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _viewImportOBJ = new AttributeDefinitionDMO();
            _viewImport = new AttributeDefinition(_viewImportOBJ);
            _viewImportOBJ.addDescription("Indicates an import required by the View interface.");
            _viewImportOBJ.setName("viewImport");
            _viewImportOBJ.setDmdID("837");
            _viewImportOBJ.setType("meta.String");
            _viewImportOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _viewImportOBJ.setDotName("mvw.viewImport.AttributeDefinition");
            _viewImportOBJ.setLineNumber("289");
            _viewImportOBJ.setValueType("TREESET");
            _viewImport.setDefinedIn(this);
            addAttributeDefList(_viewImport);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _sharedImportOBJ = new AttributeDefinitionDMO();
            _sharedImport = new AttributeDefinition(_sharedImportOBJ);
            _sharedImportOBJ.addDescription("Indicates an import required by both the View and Presenter interfaces.");
            _sharedImportOBJ.setName("sharedImport");
            _sharedImportOBJ.setDmdID("838");
            _sharedImportOBJ.setType("meta.String");
            _sharedImportOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sharedImportOBJ.setDotName("mvw.sharedImport.AttributeDefinition");
            _sharedImportOBJ.setLineNumber("296");
            _sharedImportOBJ.setValueType("TREESET");
            _sharedImport.setDefinedIn(this);
            addAttributeDefList(_sharedImport);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _presenterNameOBJ = new AttributeDefinitionDMO();
            _presenterName = new AttributeDefinition(_presenterNameOBJ);
            _presenterNameOBJ.addDescription("The name of a Presenter.");
            _presenterNameOBJ.setName("presenterName");
            _presenterNameOBJ.setDmdID("839");
            _presenterNameOBJ.setType("meta.CamelCaseName");
            _presenterNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _presenterNameOBJ.setDotName("mvw.presenterName.AttributeDefinition");
            _presenterNameOBJ.setLineNumber("302");
            _presenterName.setDefinedIn(this);
            addAttributeDefList(_presenterName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _activityNameOBJ = new AttributeDefinitionDMO();
            _activityName = new AttributeDefinition(_activityNameOBJ);
            _activityNameOBJ.addDescription("The name of an Activity.");
            _activityNameOBJ.setName("activityName");
            _activityNameOBJ.setDmdID("840");
            _activityNameOBJ.setType("meta.CamelCaseName");
            _activityNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _activityNameOBJ.setDotName("mvw.activityName.AttributeDefinition");
            _activityNameOBJ.setLineNumber("308");
            _activityName.setDefinedIn(this);
            addAttributeDefList(_activityName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _managesViewOBJ = new AttributeDefinitionDMO();
            _managesView = new AttributeDefinition(_managesViewOBJ);
            _managesViewOBJ.addDescription("Indicates Views that are managed by a Component.");
            _managesViewOBJ.setName("managesView");
            _managesViewOBJ.setDmdID("841");
            _managesViewOBJ.setType("mvw.View");
            _managesViewOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _managesViewOBJ.setDotName("mvw.managesView.AttributeDefinition");
            _managesViewOBJ.setLineNumber("315");
            _managesViewOBJ.setValueType("MULTI");
            _managesView.setDefinedIn(this);
            addAttributeDefList(_managesView);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _usesControllerOBJ = new AttributeDefinitionDMO();
            _usesController = new AttributeDefinition(_usesControllerOBJ);
            _usesControllerOBJ.addDescription("Indicates Controllers that are used by an application or a site.");
            _usesControllerOBJ.setName("usesController");
            _usesControllerOBJ.setDmdID("842");
            _usesControllerOBJ.setType("mvw.Controller");
            _usesControllerOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usesControllerOBJ.setDotName("mvw.usesController.AttributeDefinition");
            _usesControllerOBJ.setLineNumber("322");
            _usesControllerOBJ.setValueType("MULTI");
            _usesController.setDefinedIn(this);
            addAttributeDefList(_usesController);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useSchemaOBJ = new AttributeDefinitionDMO();
            _useSchema = new AttributeDefinition(_useSchemaOBJ);
            _useSchemaOBJ.addDescription("Indicates the schemas that a component uses. Your module must specify dependsOnSchema\n for the appropriate schemas.");
            _useSchemaOBJ.setName("useSchema");
            _useSchemaOBJ.setDmdID("843");
            _useSchemaOBJ.setType("meta.SchemaDefinition");
            _useSchemaOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useSchemaOBJ.setDotName("mvw.useSchema.AttributeDefinition");
            _useSchemaOBJ.setLineNumber("330");
            _useSchemaOBJ.setValueType("MULTI");
            _useSchema.setDefinedIn(this);
            addAttributeDefList(_useSchema);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _centralDMPErrorHandlerOBJ = new AttributeDefinitionDMO();
            _centralDMPErrorHandler = new AttributeDefinition(_centralDMPErrorHandlerOBJ);
            _centralDMPErrorHandlerOBJ.addDescription("Indicates that a controller is the target for centralized handling of Dark Matter Protocol errors.");
            _centralDMPErrorHandlerOBJ.setName("centralDMPErrorHandler");
            _centralDMPErrorHandlerOBJ.setDmdID("851");
            _centralDMPErrorHandlerOBJ.setType("meta.Boolean");
            _centralDMPErrorHandlerOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _centralDMPErrorHandlerOBJ.setDotName("mvw.centralDMPErrorHandler.AttributeDefinition");
            _centralDMPErrorHandlerOBJ.setLineNumber("385");
            _centralDMPErrorHandler.setDefinedIn(this);
            addAttributeDefList(_centralDMPErrorHandler);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _centralRPCErrorHandlerOBJ = new AttributeDefinitionDMO();
            _centralRPCErrorHandler = new AttributeDefinition(_centralRPCErrorHandlerOBJ);
            _centralRPCErrorHandlerOBJ.addDescription("Indicates that a controller is the target for centralized handling of GWT RPC errors.");
            _centralRPCErrorHandlerOBJ.setName("centralRPCErrorHandler");
            _centralRPCErrorHandlerOBJ.setDmdID("852");
            _centralRPCErrorHandlerOBJ.setType("meta.Boolean");
            _centralRPCErrorHandlerOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _centralRPCErrorHandlerOBJ.setDotName("mvw.centralRPCErrorHandler.AttributeDefinition");
            _centralRPCErrorHandlerOBJ.setLineNumber("391");
            _centralRPCErrorHandler.setDefinedIn(this);
            addAttributeDefList(_centralRPCErrorHandler);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _placeNameOBJ = new AttributeDefinitionDMO();
            _placeName = new AttributeDefinition(_placeNameOBJ);
            _placeNameOBJ.addDescription("The name of a Place.");
            _placeNameOBJ.setName("placeName");
            _placeNameOBJ.setDmdID("853");
            _placeNameOBJ.setType("meta.CamelCaseName");
            _placeNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _placeNameOBJ.setDotName("mvw.placeName.AttributeDefinition");
            _placeNameOBJ.setLineNumber("397");
            _placeName.setDefinedIn(this);
            addAttributeDefList(_placeName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _placePrefixOBJ = new AttributeDefinitionDMO();
            _placePrefix = new AttributeDefinition(_placePrefixOBJ);
            _placePrefixOBJ.addDescription("The prefix that globally identifies a Place. A Place url is composed of prefix:token.");
            _placePrefixOBJ.setName("placePrefix");
            _placePrefixOBJ.setDmdID("854");
            _placePrefixOBJ.setType("meta.String");
            _placePrefixOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _placePrefixOBJ.setDotName("mvw.placePrefix.AttributeDefinition");
            _placePrefixOBJ.setLineNumber("403");
            _placePrefix.setDefinedIn(this);
            addAttributeDefList(_placePrefix);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _runsActivityOBJ = new AttributeDefinitionDMO();
            _runsActivity = new AttributeDefinition(_runsActivityOBJ);
            _runsActivityOBJ.addDescription("Indicates the Activity that runs in a Place.");
            _runsActivityOBJ.setName("runsActivity");
            _runsActivityOBJ.setDmdID("855");
            _runsActivityOBJ.setType("mvw.Activity");
            _runsActivityOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _runsActivityOBJ.setDotName("mvw.runsActivity.AttributeDefinition");
            _runsActivityOBJ.setLineNumber("409");
            _runsActivity.setDefinedIn(this);
            addAttributeDefList(_runsActivity);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _parentPlaceOBJ = new AttributeDefinitionDMO();
            _parentPlace = new AttributeDefinition(_parentPlaceOBJ);
            _parentPlaceOBJ.addDescription("Indicates the parent of a SubPlace.");
            _parentPlaceOBJ.setName("parentPlace");
            _parentPlaceOBJ.setDmdID("856");
            _parentPlaceOBJ.setType("mvw.Place");
            _parentPlaceOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _parentPlaceOBJ.setDotName("mvw.parentPlace.AttributeDefinition");
            _parentPlaceOBJ.setLineNumber("415");
            _parentPlace.setDefinedIn(this);
            addAttributeDefList(_parentPlace);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _defaultPlaceOBJ = new AttributeDefinitionDMO();
            _defaultPlace = new AttributeDefinition(_defaultPlaceOBJ);
            _defaultPlaceOBJ.addDescription("Indicates the DefaultPlace for a WebApplication.");
            _defaultPlaceOBJ.setName("defaultPlace");
            _defaultPlaceOBJ.setDmdID("857");
            _defaultPlaceOBJ.setType("mvw.Place");
            _defaultPlaceOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultPlaceOBJ.setDotName("mvw.defaultPlace.AttributeDefinition");
            _defaultPlaceOBJ.setLineNumber("421");
            _defaultPlace.setDefinedIn(this);
            addAttributeDefList(_defaultPlace);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _abstractActivityOBJ = new AttributeDefinitionDMO();
            _abstractActivity = new AttributeDefinition(_abstractActivityOBJ);
            _abstractActivityOBJ.addDescription("Indicates that an Activity should be derived from AbstractActivity");
            _abstractActivityOBJ.setName("abstractActivity");
            _abstractActivityOBJ.setDmdID("858");
            _abstractActivityOBJ.setType("meta.Boolean");
            _abstractActivityOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _abstractActivityOBJ.setDotName("mvw.abstractActivity.AttributeDefinition");
            _abstractActivityOBJ.setLineNumber("427");
            _abstractActivity.setDefinedIn(this);
            addAttributeDefList(_abstractActivity);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _addedToRunContextOBJ = new AttributeDefinitionDMO();
            _addedToRunContext = new AttributeDefinition(_addedToRunContextOBJ);
            _addedToRunContextOBJ.addDescription("Indicates whether a RunContextItem should be generated for a Controller; defaults to true.\n However, if you need manual control over ordering and creation of the context item, for example in the\n case of base Controllers like the CommController, this can be set to false.");
            _addedToRunContextOBJ.setName("addedToRunContext");
            _addedToRunContextOBJ.setDmdID("859");
            _addedToRunContextOBJ.setType("meta.Boolean");
            _addedToRunContextOBJ.setNullReturnValue("true");
            _addedToRunContextOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _addedToRunContextOBJ.setDotName("mvw.addedToRunContext.AttributeDefinition");
            _addedToRunContextOBJ.setLineNumber("436");
            _addedToRunContext.setDefinedIn(this);
            addAttributeDefList(_addedToRunContext);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _instantiatesPresenterOBJ = new AttributeDefinitionDMO();
            _instantiatesPresenter = new AttributeDefinition(_instantiatesPresenterOBJ);
            _instantiatesPresenterOBJ.addDescription("Indicates that a Component makes use of a particular Presenter; a method\n will be created on the componet's BaseImpl that allows you to get a presenter of this\n type. This is used in conjunction with instantiatesView attribute, in that an appropriate \n presenter must be passed to the generated get*View() method to get a view instance.");
            _instantiatesPresenterOBJ.setName("instantiatesPresenter");
            _instantiatesPresenterOBJ.setDmdID("860");
            _instantiatesPresenterOBJ.setType("mvw.Presenter");
            _instantiatesPresenterOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _instantiatesPresenterOBJ.setDotName("mvw.instantiatesPresenter.AttributeDefinition");
            _instantiatesPresenterOBJ.setLineNumber("446");
            _instantiatesPresenterOBJ.setValueType("MULTI");
            _instantiatesPresenter.setDefinedIn(this);
            addAttributeDefList(_instantiatesPresenter);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _createOnDemandOBJ = new AttributeDefinitionDMO();
            _createOnDemand = new AttributeDefinition(_createOnDemandOBJ);
            _createOnDemandOBJ.addDescription("Indicates that a RunContextItem will be created on demand when requested\n from the RunContext.");
            _createOnDemandOBJ.setName("createOnDemand");
            _createOnDemandOBJ.setDmdID("861");
            _createOnDemandOBJ.setType("meta.Boolean");
            _createOnDemandOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _createOnDemandOBJ.setDotName("mvw.createOnDemand.AttributeDefinition");
            _createOnDemandOBJ.setLineNumber("453");
            _createOnDemand.setDefinedIn(this);
            addAttributeDefList(_createOnDemand);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _instantiatesViewOBJ = new AttributeDefinitionDMO();
            _instantiatesView = new AttributeDefinition(_instantiatesViewOBJ);
            _instantiatesViewOBJ.addDescription("Indicates that a component instantiates a particular View; a method\n will created on the component BaseImpl that allows you to get an instance of this\n view and bind it to the appropriate presenter.");
            _instantiatesViewOBJ.setName("instantiatesView");
            _instantiatesViewOBJ.setDmdID("862");
            _instantiatesViewOBJ.setType("mvw.View");
            _instantiatesViewOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _instantiatesViewOBJ.setDotName("mvw.instantiatesView.AttributeDefinition");
            _instantiatesViewOBJ.setLineNumber("462");
            _instantiatesViewOBJ.setValueType("MULTI");
            _instantiatesView.setDefinedIn(this);
            addAttributeDefList(_instantiatesView);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _singletonOBJ = new AttributeDefinitionDMO();
            _singleton = new AttributeDefinition(_singletonOBJ);
            _singletonOBJ.addDescription("Indicates that a Presenter will be the only one created from\n the run context. If this flag is false (the default), calling getXPresenter()\n will return a new instance of the component. This is also used in conjunction (internally)\n with the createOnDemand attribute on RunContextItems.");
            _singletonOBJ.setName("singleton");
            _singletonOBJ.setDmdID("863");
            _singletonOBJ.setType("meta.Boolean");
            _singletonOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _singletonOBJ.setDotName("mvw.singleton.AttributeDefinition");
            _singletonOBJ.setLineNumber("471");
            _singleton.setDefinedIn(this);
            addAttributeDefList(_singleton);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _usingStandardSubpackagesOBJ = new AttributeDefinitionDMO();
            _usingStandardSubpackages = new AttributeDefinition(_usingStandardSubpackagesOBJ);
            _usingStandardSubpackagesOBJ.addDescription("When set on a Module, this indicates that extended classes for Activities,\n Controllers, Presenters and Views will be expected to be in standard subpackages beneath \n your extended package i.e. extended.activities, extended.controllers etc. This way, you don't\n have to specify the subpackage attribute for each of these components. If the subpackage\n is specified for any of these components, it takes precidence over the standard");
            _usingStandardSubpackagesOBJ.setName("usingStandardSubpackages");
            _usingStandardSubpackagesOBJ.setDmdID("864");
            _usingStandardSubpackagesOBJ.setType("meta.Boolean");
            _usingStandardSubpackagesOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _usingStandardSubpackagesOBJ.setDotName("mvw.usingStandardSubpackages.AttributeDefinition");
            _usingStandardSubpackagesOBJ.setLineNumber("481");
            _usingStandardSubpackages.setDefinedIn(this);
            addAttributeDefList(_usingStandardSubpackages);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _configNameOBJ = new AttributeDefinitionDMO();
            _configName = new AttributeDefinition(_configNameOBJ);
            _configNameOBJ.addDescription("The name of a menu implementation configuration.");
            _configNameOBJ.setName("configName");
            _configNameOBJ.setDmdID("865");
            _configNameOBJ.setType("meta.CamelCaseName");
            _configNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _configNameOBJ.setDotName("mvw.configName.AttributeDefinition");
            _configNameOBJ.setLineNumber("487");
            _configName.setDefinedIn(this);
            addAttributeDefList(_configName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _defaultMenuBarOBJ = new AttributeDefinitionDMO();
            _defaultMenuBar = new AttributeDefinition(_defaultMenuBarOBJ);
            _defaultMenuBarOBJ.addDescription("The name and description of the default menu bar implementation.");
            _defaultMenuBarOBJ.setName("defaultMenuBar");
            _defaultMenuBarOBJ.setDmdID("866");
            _defaultMenuBarOBJ.setType("mvw.MenuElementTypeAndComment");
            _defaultMenuBarOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultMenuBarOBJ.setDotName("mvw.defaultMenuBar.AttributeDefinition");
            _defaultMenuBarOBJ.setLineNumber("493");
            _defaultMenuBar.setDefinedIn(this);
            addAttributeDefList(_defaultMenuBar);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _alternateMenuBarOBJ = new AttributeDefinitionDMO();
            _alternateMenuBar = new AttributeDefinition(_alternateMenuBarOBJ);
            _alternateMenuBarOBJ.addDescription("The name and description of various alternate menu bar implementations.");
            _alternateMenuBarOBJ.setName("alternateMenuBar");
            _alternateMenuBarOBJ.setDmdID("867");
            _alternateMenuBarOBJ.setType("mvw.MenuElementTypeAndComment");
            _alternateMenuBarOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateMenuBarOBJ.setDotName("mvw.alternateMenuBar.AttributeDefinition");
            _alternateMenuBarOBJ.setLineNumber("500");
            _alternateMenuBarOBJ.setValueType("MULTI");
            _alternateMenuBar.setDefinedIn(this);
            addAttributeDefList(_alternateMenuBar);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _elementNameOBJ = new AttributeDefinitionDMO();
            _elementName = new AttributeDefinition(_elementNameOBJ);
            _elementNameOBJ.addDescription("The name of a menu related element.");
            _elementNameOBJ.setName("elementName");
            _elementNameOBJ.setDmdID("868");
            _elementNameOBJ.setType("meta.CamelCaseName");
            _elementNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _elementNameOBJ.setDotName("mvw.elementName.AttributeDefinition");
            _elementNameOBJ.setLineNumber("506");
            _elementName.setDefinedIn(this);
            addAttributeDefList(_elementName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useImplOBJ = new AttributeDefinitionDMO();
            _useImpl = new AttributeDefinition(_useImplOBJ);
            _useImplOBJ.addDescription("The name of a menu element implementation.");
            _useImplOBJ.setName("useImpl");
            _useImplOBJ.setDmdID("869");
            _useImplOBJ.setType("meta.String");
            _useImplOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useImplOBJ.setDotName("mvw.useImpl.AttributeDefinition");
            _useImplOBJ.setLineNumber("512");
            _useImpl.setDefinedIn(this);
            addAttributeDefList(_useImpl);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _addToMenuOBJ = new AttributeDefinitionDMO();
            _addToMenu = new AttributeDefinition(_addToMenuOBJ);
            _addToMenuOBJ.addDescription("Indicates the menu to which an MenuItem should be added.");
            _addToMenuOBJ.setName("addToMenu");
            _addToMenuOBJ.setDmdID("870");
            _addToMenuOBJ.setType("mvw.Menu");
            _addToMenuOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _addToMenuOBJ.setDotName("mvw.addToMenu.AttributeDefinition");
            _addToMenuOBJ.setLineNumber("518");
            _addToMenu.setDefinedIn(this);
            addAttributeDefList(_addToMenu);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _alwaysEnabledOBJ = new AttributeDefinitionDMO();
            _alwaysEnabled = new AttributeDefinition(_alwaysEnabledOBJ);
            _alwaysEnabledOBJ.addDescription("Indicates if the item is always enabled. If not, there will be a\n method generated that is called before the menu is shown to determine if the item\n is enabled/disabled.");
            _alwaysEnabledOBJ.setName("alwaysEnabled");
            _alwaysEnabledOBJ.setDmdID("871");
            _alwaysEnabledOBJ.setType("meta.Boolean");
            _alwaysEnabledOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alwaysEnabledOBJ.setDotName("mvw.alwaysEnabled.AttributeDefinition");
            _alwaysEnabledOBJ.setLineNumber("526");
            _alwaysEnabled.setDefinedIn(this);
            addAttributeDefList(_alwaysEnabled);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _menuOrderOBJ = new AttributeDefinitionDMO();
            _menuOrder = new AttributeDefinition(_menuOrderOBJ);
            _menuOrderOBJ.addDescription("Indicates the lorder in which a sub menu or menu item\n should be displayed in the menu.");
            _menuOrderOBJ.setName("menuOrder");
            _menuOrderOBJ.setDmdID("872");
            _menuOrderOBJ.setType("meta.String");
            _menuOrderOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _menuOrderOBJ.setDotName("mvw.menuOrder.AttributeDefinition");
            _menuOrderOBJ.setLineNumber("533");
            _menuOrder.setDefinedIn(this);
            addAttributeDefList(_menuOrder);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _displayLabelOBJ = new AttributeDefinitionDMO();
            _displayLabel = new AttributeDefinition(_displayLabelOBJ);
            _displayLabelOBJ.addDescription("The label to be displayed on something.");
            _displayLabelOBJ.setName("displayLabel");
            _displayLabelOBJ.setDmdID("873");
            _displayLabelOBJ.setType("meta.String");
            _displayLabelOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayLabelOBJ.setDotName("mvw.displayLabel.AttributeDefinition");
            _displayLabelOBJ.setLineNumber("539");
            _displayLabel.setDefinedIn(this);
            addAttributeDefList(_displayLabel);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _actionBindingNameOBJ = new AttributeDefinitionDMO();
            _actionBindingName = new AttributeDefinition(_actionBindingNameOBJ);
            _actionBindingNameOBJ.addDescription("The name of an ActionBinding.");
            _actionBindingNameOBJ.setName("actionBindingName");
            _actionBindingNameOBJ.setDmdID("874");
            _actionBindingNameOBJ.setType("meta.CamelCaseName");
            _actionBindingNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _actionBindingNameOBJ.setDotName("mvw.actionBindingName.AttributeDefinition");
            _actionBindingNameOBJ.setLineNumber("545");
            _actionBindingName.setDefinedIn(this);
            addAttributeDefList(_actionBindingName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _triggersActionOBJ = new AttributeDefinitionDMO();
            _triggersAction = new AttributeDefinition(_triggersActionOBJ);
            _triggersActionOBJ.addDescription("Indicates the ActionBinding to be associated with a menu entry, button or\n other UI component.");
            _triggersActionOBJ.setName("triggersAction");
            _triggersActionOBJ.setDmdID("875");
            _triggersActionOBJ.setType("mvw.ActionBinding");
            _triggersActionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _triggersActionOBJ.setDotName("mvw.triggersAction.AttributeDefinition");
            _triggersActionOBJ.setLineNumber("552");
            _triggersAction.setDefinedIn(this);
            addAttributeDefList(_triggersAction);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _defaultSubMenuOBJ = new AttributeDefinitionDMO();
            _defaultSubMenu = new AttributeDefinition(_defaultSubMenuOBJ);
            _defaultSubMenuOBJ.addDescription("The name and description of the default submenu implementation.");
            _defaultSubMenuOBJ.setName("defaultSubMenu");
            _defaultSubMenuOBJ.setDmdID("876");
            _defaultSubMenuOBJ.setType("mvw.MenuElementTypeAndComment");
            _defaultSubMenuOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultSubMenuOBJ.setDotName("mvw.defaultSubMenu.AttributeDefinition");
            _defaultSubMenuOBJ.setLineNumber("558");
            _defaultSubMenu.setDefinedIn(this);
            addAttributeDefList(_defaultSubMenu);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _alternateSubMenuOBJ = new AttributeDefinitionDMO();
            _alternateSubMenu = new AttributeDefinition(_alternateSubMenuOBJ);
            _alternateSubMenuOBJ.addDescription("The name and description of the various submenu implementations.");
            _alternateSubMenuOBJ.setName("alternateSubMenu");
            _alternateSubMenuOBJ.setDmdID("877");
            _alternateSubMenuOBJ.setType("mvw.MenuElementTypeAndComment");
            _alternateSubMenuOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateSubMenuOBJ.setDotName("mvw.alternateSubMenu.AttributeDefinition");
            _alternateSubMenuOBJ.setLineNumber("565");
            _alternateSubMenuOBJ.setValueType("MULTI");
            _alternateSubMenu.setDefinedIn(this);
            addAttributeDefList(_alternateSubMenu);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _defaultMenuItemOBJ = new AttributeDefinitionDMO();
            _defaultMenuItem = new AttributeDefinition(_defaultMenuItemOBJ);
            _defaultMenuItemOBJ.addDescription("The name and description of the default menu item implementation.");
            _defaultMenuItemOBJ.setName("defaultMenuItem");
            _defaultMenuItemOBJ.setDmdID("878");
            _defaultMenuItemOBJ.setType("mvw.MenuElementTypeAndComment");
            _defaultMenuItemOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultMenuItemOBJ.setDotName("mvw.defaultMenuItem.AttributeDefinition");
            _defaultMenuItemOBJ.setLineNumber("571");
            _defaultMenuItem.setDefinedIn(this);
            addAttributeDefList(_defaultMenuItem);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _alternateMenuItemOBJ = new AttributeDefinitionDMO();
            _alternateMenuItem = new AttributeDefinition(_alternateMenuItemOBJ);
            _alternateMenuItemOBJ.addDescription("The name and description of various alternate Menu item implementations.");
            _alternateMenuItemOBJ.setName("alternateMenuItem");
            _alternateMenuItemOBJ.setDmdID("879");
            _alternateMenuItemOBJ.setType("mvw.MenuElementTypeAndComment");
            _alternateMenuItemOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _alternateMenuItemOBJ.setDotName("mvw.alternateMenuItem.AttributeDefinition");
            _alternateMenuItemOBJ.setLineNumber("578");
            _alternateMenuItemOBJ.setValueType("MULTI");
            _alternateMenuItem.setDefinedIn(this);
            addAttributeDefList(_alternateMenuItem);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _implementsActionOBJ = new AttributeDefinitionDMO();
            _implementsAction = new AttributeDefinition(_implementsActionOBJ);
            _implementsActionOBJ.addDescription("Indicates the ActionBindings to be implemented by a Component.");
            _implementsActionOBJ.setName("implementsAction");
            _implementsActionOBJ.setDmdID("880");
            _implementsActionOBJ.setType("mvw.ActionBinding");
            _implementsActionOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _implementsActionOBJ.setDotName("mvw.implementsAction.AttributeDefinition");
            _implementsActionOBJ.setLineNumber("585");
            _implementsActionOBJ.setValueType("MULTI");
            _implementsAction.setDefinedIn(this);
            addAttributeDefList(_implementsAction);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _implementedByOBJ = new AttributeDefinitionDMO();
            _implementedBy = new AttributeDefinition(_implementedByOBJ);
            _implementedByOBJ.addDescription("Indicates the Component that implements an ActionBinding.");
            _implementedByOBJ.setName("implementedBy");
            _implementedByOBJ.setDmdID("881");
            _implementedByOBJ.setType("mvw.Component");
            _implementedByOBJ.setInternalUse("true");
            _implementedByOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _implementedByOBJ.setDotName("mvw.implementedBy.AttributeDefinition");
            _implementedByOBJ.setLineNumber("592");
            _implementedBy.setDefinedIn(this);
            addAttributeDefList(_implementedBy);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _defaultSeparatorOBJ = new AttributeDefinitionDMO();
            _defaultSeparator = new AttributeDefinition(_defaultSeparatorOBJ);
            _defaultSeparatorOBJ.addDescription("The name and description of the default separator implementation.");
            _defaultSeparatorOBJ.setName("defaultSeparator");
            _defaultSeparatorOBJ.setDmdID("882");
            _defaultSeparatorOBJ.setType("mvw.MenuElementTypeAndComment");
            _defaultSeparatorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _defaultSeparatorOBJ.setDotName("mvw.defaultSeparator.AttributeDefinition");
            _defaultSeparatorOBJ.setLineNumber("598");
            _defaultSeparator.setDefinedIn(this);
            addAttributeDefList(_defaultSeparator);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _menuImplementationOBJ = new AttributeDefinitionDMO();
            _menuImplementation = new AttributeDefinition(_menuImplementationOBJ);
            _menuImplementationOBJ.addDescription("A reference to a menu implementation.");
            _menuImplementationOBJ.setName("menuImplementation");
            _menuImplementationOBJ.setDmdID("883");
            _menuImplementationOBJ.setType("mvw.MenuImplementationConfig");
            _menuImplementationOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _menuImplementationOBJ.setDotName("mvw.menuImplementation.AttributeDefinition");
            _menuImplementationOBJ.setLineNumber("604");
            _menuImplementation.setDefinedIn(this);
            addAttributeDefList(_menuImplementation);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _displayLabelI18NOBJ = new AttributeDefinitionDMO();
            _displayLabelI18N = new AttributeDefinition(_displayLabelI18NOBJ);
            _displayLabelI18NOBJ.addDescription("A reference to run context item with translated labels for your menu item.\n If you had defined a run context item called constants (whose base interface was generated\n by the GWT I18N creation mechanisms), you could use one its value by specifying constants.myLabel().");
            _displayLabelI18NOBJ.setName("displayLabelI18N");
            _displayLabelI18NOBJ.setDmdID("884");
            _displayLabelI18NOBJ.setType("meta.String");
            _displayLabelI18NOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _displayLabelI18NOBJ.setDotName("mvw.displayLabelI18N.AttributeDefinition");
            _displayLabelI18NOBJ.setLineNumber("612");
            _displayLabelI18N.setDefinedIn(this);
            addAttributeDefList(_displayLabelI18N);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _bindingNameOBJ = new AttributeDefinitionDMO();
            _bindingName = new AttributeDefinition(_bindingNameOBJ);
            _bindingNameOBJ.addDescription("The name of a FormBinding.");
            _bindingNameOBJ.setName("bindingName");
            _bindingNameOBJ.setDmdID("885");
            _bindingNameOBJ.setType("meta.CamelCaseName");
            _bindingNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _bindingNameOBJ.setDotName("mvw.bindingName.AttributeDefinition");
            _bindingNameOBJ.setLineNumber("618");
            _bindingName.setDefinedIn(this);
            addAttributeDefList(_bindingName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _editObjectOBJ = new AttributeDefinitionDMO();
            _editObject = new AttributeDefinition(_editObjectOBJ);
            _editObjectOBJ.addDescription("The class of object to be editted by a Form.");
            _editObjectOBJ.setName("editObject");
            _editObjectOBJ.setDmdID("886");
            _editObjectOBJ.setType("meta.ClassDefinition");
            _editObjectOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _editObjectOBJ.setDotName("mvw.editObject.AttributeDefinition");
            _editObjectOBJ.setLineNumber("624");
            _editObject.setDefinedIn(this);
            addAttributeDefList(_editObject);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _editFieldOBJ = new AttributeDefinitionDMO();
            _editField = new AttributeDefinition(_editFieldOBJ);
            _editFieldOBJ.addDescription("The specification of an attribute to the field editor to be used and optionally\n the label and tooltip to be used. The format for this attribute is <br>\n attribute_name field_editor [MUST|RO] [: label] [: tool tip]");
            _editFieldOBJ.setName("editField");
            _editFieldOBJ.setDmdID("887");
            _editFieldOBJ.setType("mvw.EditField");
            _editFieldOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _editFieldOBJ.setDotName("mvw.editField.AttributeDefinition");
            _editFieldOBJ.setLineNumber("633");
            _editFieldOBJ.setValueType("MULTI");
            _editField.setDefinedIn(this);
            addAttributeDefList(_editField);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _editorNameOBJ = new AttributeDefinitionDMO();
            _editorName = new AttributeDefinition(_editorNameOBJ);
            _editorNameOBJ.addDescription("The name of a FieldEditor.");
            _editorNameOBJ.setName("editorName");
            _editorNameOBJ.setDmdID("888");
            _editorNameOBJ.setType("meta.CamelCaseName");
            _editorNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _editorNameOBJ.setDotName("mvw.editorName.AttributeDefinition");
            _editorNameOBJ.setLineNumber("639");
            _editorName.setDefinedIn(this);
            addAttributeDefList(_editorName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _strictlyCheckedOBJ = new AttributeDefinitionDMO();
            _strictlyChecked = new AttributeDefinition(_strictlyCheckedOBJ);
            _strictlyCheckedOBJ.addDescription("By default when creating form bindings, the MVW Generator will ensure that the \n attributes you refer to in your editFields are part of the class specified by editObject. In cases\n where you might be using auxiliary classes though, you can turn strict checking off by setting\n it to false.");
            _strictlyCheckedOBJ.setName("strictlyChecked");
            _strictlyCheckedOBJ.setDmdID("889");
            _strictlyCheckedOBJ.setType("meta.Boolean");
            _strictlyCheckedOBJ.setNullReturnValue("true");
            _strictlyCheckedOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _strictlyCheckedOBJ.setDotName("mvw.strictlyChecked.AttributeDefinition");
            _strictlyCheckedOBJ.setLineNumber("649");
            _strictlyChecked.setDefinedIn(this);
            addAttributeDefList(_strictlyChecked);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _mappingNameOBJ = new AttributeDefinitionDMO();
            _mappingName = new AttributeDefinition(_mappingNameOBJ);
            _mappingNameOBJ.addDescription("The name of a GxtEnumMapping.");
            _mappingNameOBJ.setName("mappingName");
            _mappingNameOBJ.setDmdID("890");
            _mappingNameOBJ.setType("meta.CamelCaseName");
            _mappingNameOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _mappingNameOBJ.setDotName("mvw.mappingName.AttributeDefinition");
            _mappingNameOBJ.setLineNumber("655");
            _mappingName.setDefinedIn(this);
            addAttributeDefList(_mappingName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _unsetValueOBJ = new AttributeDefinitionDMO();
            _unsetValue = new AttributeDefinition(_unsetValueOBJ);
            _unsetValueOBJ.addDescription("The enum value that indicates when an enum is not set i.e. its attribute would\n be removed.");
            _unsetValueOBJ.setName("unsetValue");
            _unsetValueOBJ.setDmdID("891");
            _unsetValueOBJ.setType("meta.String");
            _unsetValueOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _unsetValueOBJ.setDotName("mvw.unsetValue.AttributeDefinition");
            _unsetValueOBJ.setLineNumber("662");
            _unsetValue.setDefinedIn(this);
            addAttributeDefList(_unsetValue);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useNameAsLabelOBJ = new AttributeDefinitionDMO();
            _useNameAsLabel = new AttributeDefinition(_useNameAsLabelOBJ);
            _useNameAsLabelOBJ.addDescription("Specifies that the mapping should use the enum value eg. VALUE1 as the display\n label for the value. It would be set to lower case and the first letter captitalized e.g. Value1.\n The default is to use the description part of the enum definition as the label.");
            _useNameAsLabelOBJ.setName("useNameAsLabel");
            _useNameAsLabelOBJ.setDmdID("892");
            _useNameAsLabelOBJ.setType("meta.Boolean");
            _useNameAsLabelOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useNameAsLabelOBJ.setDotName("mvw.useNameAsLabel.AttributeDefinition");
            _useNameAsLabelOBJ.setLineNumber("670");
            _useNameAsLabel.setDefinedIn(this);
            addAttributeDefList(_useNameAsLabel);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useI18NConfigOBJ = new AttributeDefinitionDMO();
            _useI18NConfig = new AttributeDefinition(_useI18NConfigOBJ);
            _useI18NConfigOBJ.addDescription("Way too long!");
            _useI18NConfigOBJ.setName("useI18NConfig");
            _useI18NConfigOBJ.setDmdID("893");
            _useI18NConfigOBJ.setType("mvw.I18NConfig");
            _useI18NConfigOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useI18NConfigOBJ.setDotName("mvw.useI18NConfig.AttributeDefinition");
            _useI18NConfigOBJ.setLineNumber("683");
            _useI18NConfig.setDefinedIn(this);
            addAttributeDefList(_useI18NConfig);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _tipsFromI18NOBJ = new AttributeDefinitionDMO();
            _tipsFromI18N = new AttributeDefinition(_tipsFromI18NOBJ);
            _tipsFromI18NOBJ.addDescription("Specifies that tool tips should also be retrieved from an I18N configuration.\n The convention is that a tool tip for an attribute is named [attribute_name]Tip");
            _tipsFromI18NOBJ.setName("tipsFromI18N");
            _tipsFromI18NOBJ.setDmdID("894");
            _tipsFromI18NOBJ.setType("meta.Boolean");
            _tipsFromI18NOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _tipsFromI18NOBJ.setDotName("mvw.tipsFromI18N.AttributeDefinition");
            _tipsFromI18NOBJ.setLineNumber("690");
            _tipsFromI18N.setDefinedIn(this);
            addAttributeDefList(_tipsFromI18N);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _skipEnumValueOBJ = new AttributeDefinitionDMO();
            _skipEnumValue = new AttributeDefinition(_skipEnumValueOBJ);
            _skipEnumValueOBJ.addDescription("Specifies an enum value that should be left out of the enum mapping.");
            _skipEnumValueOBJ.setName("skipEnumValue");
            _skipEnumValueOBJ.setDmdID("895");
            _skipEnumValueOBJ.setType("meta.String");
            _skipEnumValueOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _skipEnumValueOBJ.setDotName("mvw.skipEnumValue.AttributeDefinition");
            _skipEnumValueOBJ.setLineNumber("697");
            _skipEnumValueOBJ.setValueType("HASHSET");
            _skipEnumValue.setDefinedIn(this);
            addAttributeDefList(_skipEnumValue);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _sendsRequestOBJ = new AttributeDefinitionDMO();
            _sendsRequest = new AttributeDefinition(_sendsRequestOBJ);
            _sendsRequestOBJ.addDescription("Way too long!");
            _sendsRequestOBJ.setName("sendsRequest");
            _sendsRequestOBJ.setDmdID("896");
            _sendsRequestOBJ.setType("mvw.RequestTypeWithOptions");
            _sendsRequestOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _sendsRequestOBJ.setDotName("mvw.sendsRequest.AttributeDefinition");
            _sendsRequestOBJ.setLineNumber("711");
            _sendsRequestOBJ.setValueType("MULTI");
            _sendsRequest.setDefinedIn(this);
            addAttributeDefList(_sendsRequest);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _autoCreatedOBJ = new AttributeDefinitionDMO();
            _autoCreated = new AttributeDefinition(_autoCreatedOBJ);
            _autoCreatedOBJ.addDescription("This attribute is used to flag defintions that are created automatically by\n the MVW infrastructure.");
            _autoCreatedOBJ.setName("autoCreated");
            _autoCreatedOBJ.setDmdID("897");
            _autoCreatedOBJ.setType("meta.Boolean");
            _autoCreatedOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _autoCreatedOBJ.setDotName("mvw.autoCreated.AttributeDefinition");
            _autoCreatedOBJ.setLineNumber("718");
            _autoCreated.setDefinedIn(this);
            addAttributeDefList(_autoCreated);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useSingleEditorOBJ = new AttributeDefinitionDMO();
            _useSingleEditor = new AttributeDefinition(_useSingleEditorOBJ);
            _useSingleEditorOBJ.addDescription("When dealing with indexed attributes, the default behaviour is to create a\n form binding with an editor instance for each index slot. However, in some cases, you\n want to use a single complex editor that handles the attribute. By setting useSingleEditor\n to true, the form binding will contain a single editor for an indexed attribute.");
            _useSingleEditorOBJ.setName("useSingleEditor");
            _useSingleEditorOBJ.setDmdID("898");
            _useSingleEditorOBJ.setType("meta.Boolean");
            _useSingleEditorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _useSingleEditorOBJ.setDotName("mvw.useSingleEditor.AttributeDefinition");
            _useSingleEditorOBJ.setLineNumber("727");
            _useSingleEditor.setDefinedIn(this);
            addAttributeDefList(_useSingleEditor);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _firedInThisModuleOBJ = new AttributeDefinitionDMO();
            _firedInThisModule = new AttributeDefinition(_firedInThisModuleOBJ);
            _firedInThisModuleOBJ.addDescription("This attribute is used to flag Events that are not fired in the module in which\n they are defined. Normally we complain about this situation, it indicates that you've defined\n extraneous Events that should be removed. However, in the case of Events defined by base modules,\n this isn't always the case; you may define Eevents that are intended to be fired from modules\n that depend on the base module's handling of those events.");
            _firedInThisModuleOBJ.setName("firedInThisModule");
            _firedInThisModuleOBJ.setDmdID("899");
            _firedInThisModuleOBJ.setType("meta.Boolean");
            _firedInThisModuleOBJ.setNullReturnValue("true");
            _firedInThisModuleOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _firedInThisModuleOBJ.setDotName("mvw.firedInThisModule.AttributeDefinition");
            _firedInThisModuleOBJ.setLineNumber("738");
            _firedInThisModule.setDefinedIn(this);
            addAttributeDefList(_firedInThisModule);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _codeSplitOBJ = new AttributeDefinitionDMO();
            _codeSplit = new AttributeDefinition(_codeSplitOBJ);
            _codeSplitOBJ.addDescription("This attribute is used to flag components that are intended to be loaded using \n GWTs code splitting mechanisms. In order to successfully make use of these mechanisms, you\n have to structure your code in such a way that the component marked as a split point has no\n direct dependencies on components outside of its own area. For the most part, this is\n accomplished by dependency injection and ensuring that the component is using interfaces to\n interact with other components.");
            _codeSplitOBJ.setName("codeSplit");
            _codeSplitOBJ.setDmdID("900");
            _codeSplitOBJ.setType("meta.Boolean");
            _codeSplitOBJ.setNullReturnValue("false");
            _codeSplitOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _codeSplitOBJ.setDotName("mvw.codeSplit.AttributeDefinition");
            _codeSplitOBJ.setLineNumber("750");
            _codeSplit.setDefinedIn(this);
            addAttributeDefList(_codeSplit);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _centralAsyncErrorHandlerOBJ = new AttributeDefinitionDMO();
            _centralAsyncErrorHandler = new AttributeDefinition(_centralAsyncErrorHandlerOBJ);
            _centralAsyncErrorHandlerOBJ.addDescription("Indicates that a controller is the target for centralized handling of asyncronous\n code loading errors.");
            _centralAsyncErrorHandlerOBJ.setName("centralAsyncErrorHandler");
            _centralAsyncErrorHandlerOBJ.setDmdID("901");
            _centralAsyncErrorHandlerOBJ.setType("meta.Boolean");
            _centralAsyncErrorHandlerOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _centralAsyncErrorHandlerOBJ.setDotName("mvw.centralAsyncErrorHandler.AttributeDefinition");
            _centralAsyncErrorHandlerOBJ.setLineNumber("757");
            _centralAsyncErrorHandler.setDefinedIn(this);
            addAttributeDefList(_centralAsyncErrorHandler);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _mappingGeneratorOBJ = new AttributeDefinitionDMO();
            _mappingGenerator = new AttributeDefinition(_mappingGeneratorOBJ);
            _mappingGeneratorOBJ.addDescription("A reference to the generator that will create the enum mapping code.\n <p/>\n An example of this can be seen in the dark-matter-gxt project.");
            _mappingGeneratorOBJ.setName("mappingGenerator");
            _mappingGeneratorOBJ.setDmdID("902");
            _mappingGeneratorOBJ.setType("mvw.EnumMappingGenerator");
            _mappingGeneratorOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _mappingGeneratorOBJ.setDotName("mvw.mappingGenerator.AttributeDefinition");
            _mappingGeneratorOBJ.setLineNumber("765");
            _mappingGenerator.setDefinedIn(this);
            addAttributeDefList(_mappingGenerator);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _enumGeneratorClassOBJ = new AttributeDefinitionDMO();
            _enumGeneratorClass = new AttributeDefinition(_enumGeneratorClassOBJ);
            _enumGeneratorClassOBJ.addDescription("The fully qualified Java class name of a class that implements the MvwEnumMappingGeneratorIF.\n <p/>\n An example of this can be seen in the dark-matter-gxt project.");
            _enumGeneratorClassOBJ.setName("enumGeneratorClass");
            _enumGeneratorClassOBJ.setDmdID("903");
            _enumGeneratorClassOBJ.setType("meta.String");
            _enumGeneratorClassOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/attributes.dmd");
            _enumGeneratorClassOBJ.setDotName("mvw.enumGeneratorClass.AttributeDefinition");
            _enumGeneratorClassOBJ.setLineNumber("773");
            _enumGeneratorClass.setDefinedIn(this);
            addAttributeDefList(_enumGeneratorClass);

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initTypes() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _EventWithArgsOBJ = new TypeDefinitionDMO();
            _EventWithArgs = new TypeDefinition(_EventWithArgsOBJ);
            _EventWithArgsOBJ.addDescription("The EventWithArgs type is used to handle definitions of events\n associated with various Model View Whatever components.");
            _EventWithArgsOBJ.setName("EventWithArgs");
            _EventWithArgsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeEventWithArgs");
            _EventWithArgsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.EventWithArgs");
            _EventWithArgsOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _EventWithArgsOBJ.setDotName("mvw.EventWithArgs.TypeDefinition");
            _EventWithArgsOBJ.setLineNumber("7");
            _EventWithArgsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EventWithArgsIterableDMW");
            _EventWithArgsOBJ.setDmwIteratorClass("EventWithArgsIterableDMW");
            _EventWithArgs.setDefinedIn(this);
            addTypeDefList(_EventWithArgs);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _MethodWithArgsOBJ = new TypeDefinitionDMO();
            _MethodWithArgs = new TypeDefinition(_MethodWithArgsOBJ);
            _MethodWithArgsOBJ.addDescription("The MethodWithArgs type is used to handle definitions of function calls\n associated with various Model View Whatever components.");
            _MethodWithArgsOBJ.setName("MethodWithArgs");
            _MethodWithArgsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeMethodWithArgs");
            _MethodWithArgsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.MethodWithArgs");
            _MethodWithArgsOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _MethodWithArgsOBJ.setDotName("mvw.MethodWithArgs.TypeDefinition");
            _MethodWithArgsOBJ.setLineNumber("14");
            _MethodWithArgsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.MethodWithArgsIterableDMW");
            _MethodWithArgsOBJ.setDmwIteratorClass("MethodWithArgsIterableDMW");
            _MethodWithArgs.setDefinedIn(this);
            addTypeDefList(_MethodWithArgs);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _GetWithOptionsOBJ = new TypeDefinitionDMO();
            _GetWithOptions = new TypeDefinition(_GetWithOptionsOBJ);
            _GetWithOptionsOBJ.addDescription("The GetWithOptions type is used to handle indications that\n a component will perform get operations.");
            _GetWithOptionsOBJ.setName("GetWithOptions");
            _GetWithOptionsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeGetWithOptions");
            _GetWithOptionsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.GetWithOptions");
            _GetWithOptionsOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _GetWithOptionsOBJ.setDotName("mvw.GetWithOptions.TypeDefinition");
            _GetWithOptionsOBJ.setLineNumber("21");
            _GetWithOptionsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.GetWithOptionsIterableDMW");
            _GetWithOptionsOBJ.setDmwIteratorClass("GetWithOptionsIterableDMW");
            _GetWithOptions.setDefinedIn(this);
            addTypeDefList(_GetWithOptions);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _RequestWithOptionsOBJ = new TypeDefinitionDMO();
            _RequestWithOptions = new TypeDefinition(_RequestWithOptionsOBJ);
            _RequestWithOptionsOBJ.addDescription("The RequestWithOptions type is used to handle indications that\n a component will perform delete or set operations.");
            _RequestWithOptionsOBJ.setName("RequestWithOptions");
            _RequestWithOptionsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeRequestWithOptions");
            _RequestWithOptionsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.RequestWithOptions");
            _RequestWithOptionsOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _RequestWithOptionsOBJ.setDotName("mvw.RequestWithOptions.TypeDefinition");
            _RequestWithOptionsOBJ.setLineNumber("28");
            _RequestWithOptionsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.RequestWithOptionsIterableDMW");
            _RequestWithOptionsOBJ.setDmwIteratorClass("RequestWithOptionsIterableDMW");
            _RequestWithOptions.setDefinedIn(this);
            addTypeDefList(_RequestWithOptions);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _RequestTypeWithOptionsOBJ = new TypeDefinitionDMO();
            _RequestTypeWithOptions = new TypeDefinition(_RequestTypeWithOptionsOBJ);
            _RequestTypeWithOptionsOBJ.addDescription("The RequestTypeWithOptions type is used to handle indications that\n a component will send the specified request type and use the specified function\n to send/receieve.");
            _RequestTypeWithOptionsOBJ.setName("RequestTypeWithOptions");
            _RequestTypeWithOptionsOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeRequestTypeWithOptions");
            _RequestTypeWithOptionsOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.RequestTypeWithOptions");
            _RequestTypeWithOptionsOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _RequestTypeWithOptionsOBJ.setDotName("mvw.RequestTypeWithOptions.TypeDefinition");
            _RequestTypeWithOptionsOBJ.setLineNumber("36");
            _RequestTypeWithOptionsOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.RequestTypeWithOptionsIterableDMW");
            _RequestTypeWithOptionsOBJ.setDmwIteratorClass("RequestTypeWithOptionsIterableDMW");
            _RequestTypeWithOptions.setDefinedIn(this);
            addTypeDefList(_RequestTypeWithOptions);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            TypeDefinitionDMO _EditFieldOBJ = new TypeDefinitionDMO();
            _EditField = new TypeDefinition(_EditFieldOBJ);
            _EditFieldOBJ.addDescription("The EditField type is used to specify compact mappings of attributes\n to their field type editors and optionally their labels and tool tips.");
            _EditFieldOBJ.setName("EditField");
            _EditFieldOBJ.setTypeClassName("org.dmd.mvw.tools.mvwgenerator.types.DmcTypeEditField");
            _EditFieldOBJ.setPrimitiveType("org.dmd.mvw.tools.mvwgenerator.types.EditField");
            _EditFieldOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _EditFieldOBJ.setDotName("mvw.EditField.TypeDefinition");
            _EditFieldOBJ.setLineNumber("43");
            _EditFieldOBJ.setDmwIteratorImport("org.dmd.mvw.tools.mvwgenerator.generated.dmw.EditFieldIterableDMW");
            _EditFieldOBJ.setDmwIteratorClass("EditFieldIterableDMW");
            _EditField.setDefinedIn(this);
            addTypeDefList(_EditField);

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initComplexTypes() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ComplexTypeDefinitionDMO _DisplayDataSpecOBJ = new ComplexTypeDefinitionDMO();
            _DisplayDataSpec = new ComplexTypeDefinition(_DisplayDataSpecOBJ);
            _DisplayDataSpecOBJ.addDescription("The DisplayDataSpec type is used to specify the type and cardinality of\n data that is being display in a View. It also indicates a variable name for the \n data that is used when we generate the interface methods and events associated\n with the View.");
            _DisplayDataSpecOBJ.setName("DisplayDataSpec");
            _DisplayDataSpecOBJ.addField("ClassDefinition dataClass The class of object to be displayed");
            _DisplayDataSpecOBJ.addField("SelectionTypeEnum cardinality Indicates whether the data is single or multi-valued");
            _DisplayDataSpecOBJ.addField("String varName The variable name used to indicate this piece of data");
            _DisplayDataSpecOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/complex.dmd");
            _DisplayDataSpecOBJ.setDotName("mvw.DisplayDataSpec.ComplexTypeDefinition");
            _DisplayDataSpecOBJ.setLineNumber("39");
            _DisplayDataSpec.setDefinedIn(this);
            addComplexTypeDefList(_DisplayDataSpec);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ComplexTypeDefinitionDMO _EventSpecOBJ = new ComplexTypeDefinitionDMO();
            _EventSpec = new ComplexTypeDefinition(_EventSpecOBJ);
            _EventSpecOBJ.addDescription("The EventSpec type is used to indicate the events to be generated when\n selection and deletion of objects takes place.");
            _EventSpecOBJ.setName("EventSpec");
            _EventSpecOBJ.addField("String varName A variable name previously defined, usually in a displayData attribute");
            _EventSpecOBJ.addField("SelectionTypeEnum cardinality Indicates whether the data is single or multi-valued");
            _EventSpecOBJ.addField("EventScopeEnum scope The scope of the event");
            _EventSpecOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/complex.dmd");
            _EventSpecOBJ.setDotName("mvw.EventSpec.ComplexTypeDefinition");
            _EventSpecOBJ.setLineNumber("47");
            _EventSpec.setDefinedIn(this);
            addComplexTypeDefList(_EventSpec);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ComplexTypeDefinitionDMO _OperationSpecOBJ = new ComplexTypeDefinitionDMO();
            _OperationSpec = new ComplexTypeDefinition(_OperationSpecOBJ);
            _OperationSpecOBJ.addDescription("The OperationSpec type is used to indicate the events to be generated when an object\n is associated with some operation e.g. clicked, modified, created etc.");
            _OperationSpecOBJ.setName("OperationSpec");
            _OperationSpecOBJ.addField("String varName A variable name previously defined, usually in a displayData attribute");
            _OperationSpecOBJ.addField("EventScopeEnum scope The scope of the event");
            _OperationSpecOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/complex.dmd");
            _OperationSpecOBJ.setDotName("mvw.OperationSpec.ComplexTypeDefinition");
            _OperationSpecOBJ.setLineNumber("54");
            _OperationSpec.setDefinedIn(this);
            addComplexTypeDefList(_OperationSpec);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ComplexTypeDefinitionDMO _MenuElementTypeAndCommentOBJ = new ComplexTypeDefinitionDMO();
            _MenuElementTypeAndComment = new ComplexTypeDefinition(_MenuElementTypeAndCommentOBJ);
            _MenuElementTypeAndCommentOBJ.addDescription("The MenuElementTypeAndComment type is used to indicate the strings that map to \n various menu and menu item implementations supported by a a particular menu implementation.");
            _MenuElementTypeAndCommentOBJ.setName("MenuElementTypeAndComment");
            _MenuElementTypeAndCommentOBJ.setFieldSeparator(":");
            _MenuElementTypeAndCommentOBJ.addField("String type The name of this implementation.");
            _MenuElementTypeAndCommentOBJ.addField("String comment The class used to implement the required behaviour.");
            _MenuElementTypeAndCommentOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/complex.dmd");
            _MenuElementTypeAndCommentOBJ.setDotName("mvw.MenuElementTypeAndComment.ComplexTypeDefinition");
            _MenuElementTypeAndCommentOBJ.setLineNumber("61");
            _MenuElementTypeAndComment.setDefinedIn(this);
            addComplexTypeDefList(_MenuElementTypeAndComment);

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initActions() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initEnums() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            EnumDefinitionDMO _SelectionTypeEnumOBJ = new EnumDefinitionDMO();
            _SelectionTypeEnum = new EnumDefinition(_SelectionTypeEnumOBJ);
            _SelectionTypeEnumOBJ.addEnumValue("0 SINGLE Single selection supported.");
            _SelectionTypeEnumOBJ.addEnumValue("1 MULTI Multi-selection supported.");
            _SelectionTypeEnumOBJ.addDescription("The SelectionTypeEnum indicates the selection mode of operations\n associated with object selection or object deletion.");
            _SelectionTypeEnumOBJ.setName("SelectionTypeEnum");
            _SelectionTypeEnumOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _SelectionTypeEnumOBJ.setDotName("mvw.SelectionTypeEnum.EnumDefinition");
            _SelectionTypeEnumOBJ.setLineNumber("51");
            _SelectionTypeEnum.setDefinedIn(this);
            addEnumDefList(_SelectionTypeEnum);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            EnumDefinitionDMO _EventScopeEnumOBJ = new EnumDefinitionDMO();
            _EventScopeEnum = new EnumDefinition(_EventScopeEnumOBJ);
            _EventScopeEnumOBJ.addEnumValue("0 LOCAL Single selection supported.");
            _EventScopeEnumOBJ.addEnumValue("1 BROADCAST Multi-selection supported.");
            _EventScopeEnumOBJ.addEnumValue("2 BROADCASTONLY Multi-selection supported.");
            _EventScopeEnumOBJ.addDescription("The SelectionTypeEnum indicates the selection mode of operations");
            _EventScopeEnumOBJ.setName("EventScopeEnum");
            _EventScopeEnumOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _EventScopeEnumOBJ.setDotName("mvw.EventScopeEnum.EnumDefinition");
            _EventScopeEnumOBJ.setLineNumber("58");
            _EventScopeEnum.setDefinedIn(this);
            addEnumDefList(_EventScopeEnum);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            EnumDefinitionDMO _RequestOptionEnumOBJ = new EnumDefinitionDMO();
            _RequestOptionEnum = new EnumDefinition(_RequestOptionEnumOBJ);
            _RequestOptionEnumOBJ.addEnumValue("0 NONE Indicates that no options are specified.");
            _RequestOptionEnumOBJ.addEnumValue("1 DMPERRORS Indicates that DMP error responses will be handled locally.");
            _RequestOptionEnumOBJ.addEnumValue("2 RPCERRORS Indicates that RPC errors will be handled locally.");
            _RequestOptionEnumOBJ.addEnumValue("3 CENTRALDMPERRORS Indicates that you want DMP errors centrally handled.");
            _RequestOptionEnumOBJ.addEnumValue("4 CENTRALRPCERRORS Indicates that you want RPC errors centrally handled.");
            _RequestOptionEnumOBJ.addEnumValue("5 CENTRALERRORS Indicates that you want DMP/RPC errors centrally handled.");
            _RequestOptionEnumOBJ.addEnumValue("6 CACHE Indicates that you want the results centrally cached.");
            _RequestOptionEnumOBJ.addEnumValue("7 EVENTS Indicates that you want notification of events associated with the get request.");
            _RequestOptionEnumOBJ.addDescription("The RequestOptionEnum indicates a set of modifiers that direct\n code generation for standard Dark Matter Protocol request handling.");
            _RequestOptionEnumOBJ.setName("RequestOptionEnum");
            _RequestOptionEnumOBJ.setFile("/src/org/dmd/mvw/tools/mvwgenerator/dmdconfig/v0dot1/types.dmd");
            _RequestOptionEnumOBJ.setDotName("mvw.RequestOptionEnum.EnumDefinition");
            _RequestOptionEnumOBJ.setLineNumber("83");
            _RequestOptionEnum.setDefinedIn(this);
            addEnumDefList(_RequestOptionEnum);

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initRules() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initDSDModules() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:272)

    @Override
    public synchronized MvwSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}


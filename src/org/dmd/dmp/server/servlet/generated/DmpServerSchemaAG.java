package org.dmd.dmp.server.servlet.generated;

import org.dmd.dmc.DmcOmni;
import org.dmd.dmc.DmcValueException;
import org.dmd.dms.*;
import org.dmd.dms.generated.dmo.*;
import org.dmd.dmp.server.servlet.generated.dmo.DmpServerDMSAG;


/**
 * The DMP Server schema defines classes used to define plugins\n for the
 * reference implementation of the DMP based servlet.
 * <P>
 * Generated from the dmpServer schema at version unknown
 * <P>
 * This code was auto-generated by the dmggenerator utility and shouldn't be alterred manually!
 * Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:182)
 */
public class DmpServerSchemaAG extends SchemaDefinition {

    public static ClassDefinition _PluginConfig;
    public static ClassDefinition _UserFolderRI;
    public static ClassDefinition _UserRI;
    public static ClassDefinition _SessionFolderRI;
    public static ClassDefinition _SessionRI;

    public static AttributeDefinition _pluginName;
    public static AttributeDefinition _startOrder;
    public static AttributeDefinition _pluginClass;
    public static AttributeDefinition _useSchemaClass;
    public static AttributeDefinition _idRI;
    public static AttributeDefinition _sessionIDRI;
    public static AttributeDefinition _sessionHostRI;
    public static AttributeDefinition _userRefRI;
    public static AttributeDefinition _runnable;







    static DmpServerSchemaAG instance;

    public DmpServerSchemaAG() throws DmcValueException {
        generatedSchema = true;
        staticRefName   = "org.dmd.dmp.server.servlet.generated.DmpServerSchemaAG";

        dependsOnSchemaClasses.put("dmrbase","org.dmd.dmr.server.base.generated.DmrbaseSchemaAG");

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:208)
    private void initialize() throws DmcValueException {
        if (instance == null){
            instance        = this;
            SchemaDefinitionDMO me = (SchemaDefinitionDMO) this.getDmcObject();
            me.setName("dmpServer");
            me.setDotName("dmpServer");
            me.setSchemaPackage("org.dmd.dmp.server.servlet");
            me.setDmwPackage("org.dmd.dmp.server.servlet");
            me.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/dmpServer.dms");


            me.addDependsOn("dmrbase");
            dependsOnSchemaClasses.put("dmrbase","org.dmd.dmr.server.base.generated.DmrbaseSchemaAG");


            initClasses();
            initAttributes1();
            initTypes();
            initComplexTypes();
            initActions();
            initEnums();
            initRules();
            initDSDModules();
            DmcOmni.instance().addCompactSchema(DmpServerDMSAG.instance());
        }
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initClasses() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _PluginConfigOBJ = new ClassDefinitionDMO();
            _PluginConfig = new ClassDefinition(_PluginConfigOBJ,DmpServerDMSAG.__PluginConfig);
            _PluginConfigOBJ.setName("PluginConfig");
            _PluginConfigOBJ.setDmdID("1401");
            _PluginConfigOBJ.setClassType("STRUCTURAL");
            _PluginConfigOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/classes.dmd");
            _PluginConfigOBJ.setLineNumber("17");
            _PluginConfigOBJ.setIsNamedBy("meta.camelCaseName");
            _PluginConfigOBJ.addDescription("The PluginConfig is used to specify a plugin to be loaded into\n the DMP Servlet Reference Implementation servlet.");
            _PluginConfigOBJ.setUseWrapperType("EXTENDED");
            _PluginConfigOBJ.addMust("meta.camelCaseName");
            _PluginConfigOBJ.addMust("dmpServer.pluginName");
            _PluginConfigOBJ.addMust("dmpServer.pluginClass");
            _PluginConfigOBJ.addMay("dmpServer.startOrder");
            _PluginConfigOBJ.addMay("dmpServer.runnable");
            _PluginConfigOBJ.addMay("meta.description");
            _PluginConfigOBJ.addMay("meta.lineNumber");
            _PluginConfigOBJ.addMay("meta.file");
            _PluginConfigOBJ.setDmwIteratorImport("org.dmd.dmp.server.servlet.generated.dmw.PluginConfigIterableDMW");
            _PluginConfigOBJ.setDmwIteratorClass("PluginConfigIterableDMW");
            _PluginConfigOBJ.setDmtREFImport("org.dmd.dmp.server.servlet.generated.types.PluginConfigREF");
            _PluginConfigOBJ.setDotName("dmpServer.PluginConfig.ClassDefinition");
            _PluginConfig.setDefinedIn(this);
            addClassDefList(_PluginConfig);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _UserFolderRIOBJ = new ClassDefinitionDMO();
            _UserFolderRI = new ClassDefinition(_UserFolderRIOBJ,DmpServerDMSAG.__UserFolderRI);
            _UserFolderRIOBJ.setName("UserFolderRI");
            _UserFolderRIOBJ.setDmdID("1402");
            _UserFolderRIOBJ.setClassType("STRUCTURAL");
            _UserFolderRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/classes.dmd");
            _UserFolderRIOBJ.setDotName("dmpServer.UserFolderRI.ClassDefinition");
            _UserFolderRIOBJ.setLineNumber("25");
            _UserFolderRIOBJ.setIsNamedBy("meta.dotName");
            _UserFolderRIOBJ.addDescription("The UserFolderRI provides for a grouping of UserRI objects.");
            _UserFolderRIOBJ.addMust("meta.dotName");
            _UserFolderRIOBJ.setDmwIteratorImport("org.dmd.dmp.server.servlet.generated.dmw.UserFolderRIIterableDMW");
            _UserFolderRIOBJ.setDmwIteratorClass("UserFolderRIIterableDMW");
            _UserFolderRI.setDefinedIn(this);
            _UserFolderRIOBJ.setDmtREFImport("org.dmd.dmp.server.servlet.generated.types.UserFolderRIREF");
            addClassDefList(_UserFolderRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _UserRIOBJ = new ClassDefinitionDMO();
            _UserRI = new ClassDefinition(_UserRIOBJ,DmpServerDMSAG.__UserRI);
            _UserRIOBJ.setName("UserRI");
            _UserRIOBJ.setDmdID("1403");
            _UserRIOBJ.setClassType("STRUCTURAL");
            _UserRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/classes.dmd");
            _UserRIOBJ.setLineNumber("38");
            _UserRIOBJ.setIsNamedBy("meta.dotName");
            _UserRIOBJ.addDescription("The UserRI class provides a user representation for use with the \n Reference Implementation (RI).");
            _UserRIOBJ.addMust("meta.dotName");
            _UserRIOBJ.addMust("dmpServer.idRI");
            _UserRIOBJ.addMust("dmrbase.userName");
            _UserRIOBJ.addMust("dmrbase.password");
            _UserRIOBJ.setDmwIteratorImport("org.dmd.dmp.server.servlet.generated.dmw.UserRIIterableDMW");
            _UserRIOBJ.setDmwIteratorClass("UserRIIterableDMW");
            _UserRIOBJ.setDmtREFImport("org.dmd.dmp.server.servlet.generated.types.UserRIREF");
            _UserRIOBJ.setDotName("dmpServer.UserRI.ClassDefinition");
            _UserRI.setDefinedIn(this);
            _UserRIOBJ.addAllowedParents("dmpServer.UserFolderRI");
            addClassDefList(_UserRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _SessionFolderRIOBJ = new ClassDefinitionDMO();
            _SessionFolderRI = new ClassDefinition(_SessionFolderRIOBJ,DmpServerDMSAG.__SessionFolderRI);
            _SessionFolderRIOBJ.setName("SessionFolderRI");
            _SessionFolderRIOBJ.setDmdID("1404");
            _SessionFolderRIOBJ.setClassType("STRUCTURAL");
            _SessionFolderRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/classes.dmd");
            _SessionFolderRIOBJ.setDotName("dmpServer.SessionFolderRI.ClassDefinition");
            _SessionFolderRIOBJ.setLineNumber("46");
            _SessionFolderRIOBJ.setIsNamedBy("meta.dotName");
            _SessionFolderRIOBJ.addDescription("The SessionFolderRI provides for a grouping of SessionRI objects.");
            _SessionFolderRIOBJ.addMust("meta.dotName");
            _SessionFolderRIOBJ.setDmwIteratorImport("org.dmd.dmp.server.servlet.generated.dmw.SessionFolderRIIterableDMW");
            _SessionFolderRIOBJ.setDmwIteratorClass("SessionFolderRIIterableDMW");
            _SessionFolderRI.setDefinedIn(this);
            _SessionFolderRIOBJ.setDmtREFImport("org.dmd.dmp.server.servlet.generated.types.SessionFolderRIREF");
            addClassDefList(_SessionFolderRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            ClassDefinitionDMO _SessionRIOBJ = new ClassDefinitionDMO();
            _SessionRI = new ClassDefinition(_SessionRIOBJ,DmpServerDMSAG.__SessionRI);
            _SessionRIOBJ.setName("SessionRI");
            _SessionRIOBJ.setDmdID("1405");
            _SessionRIOBJ.setClassType("STRUCTURAL");
            _SessionRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/classes.dmd");
            _SessionRIOBJ.setLineNumber("62");
            _SessionRIOBJ.setIsNamedBy("meta.dotName");
            _SessionRIOBJ.addDescription("The SessionRI represents an authenticated user session and is an important\n aspect of any serious application. All interactions are usually associated with a valid\n session and, in the case of the reference implementation of the Dark MAtter Protocol\n service are also associated with the handling of asynchronous message handling and events.");
            _SessionRIOBJ.setUseWrapperType("EXTENDED");
            _SessionRIOBJ.addMust("meta.dotName");
            _SessionRIOBJ.addMust("dmpServer.sessionIDRI");
            _SessionRIOBJ.addMust("dmpServer.sessionHostRI");
            _SessionRIOBJ.addMust("dmpServer.userRefRI");
            _SessionRIOBJ.setDmwIteratorImport("org.dmd.dmp.server.servlet.generated.dmw.SessionRIIterableDMW");
            _SessionRIOBJ.setDmwIteratorClass("SessionRIIterableDMW");
            _SessionRIOBJ.setDmtREFImport("org.dmd.dmp.server.servlet.generated.types.SessionRIREF");
            _SessionRIOBJ.setDotName("dmpServer.SessionRI.ClassDefinition");
            _SessionRI.setDefinedIn(this);
            _SessionRIOBJ.addAllowedParents("dmpServer.SessionFolderRI");
            addClassDefList(_SessionRI);

    }

    private void initAttributes1() throws DmcValueException {
// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _pluginNameOBJ = new AttributeDefinitionDMO();
            _pluginName = new AttributeDefinition(_pluginNameOBJ);
            _pluginNameOBJ.addDescription("The globally unique name of a Dark Matter ServletPlugin.");
            _pluginNameOBJ.setName("pluginName");
            _pluginNameOBJ.setDmdID("701");
            _pluginNameOBJ.setType("meta.CamelCaseName");
            _pluginNameOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _pluginNameOBJ.setDotName("dmpServer.pluginName.AttributeDefinition");
            _pluginNameOBJ.setLineNumber("6");
            _pluginName.setDefinedIn(this);
            addAttributeDefList(_pluginName);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _startOrderOBJ = new AttributeDefinitionDMO();
            _startOrder = new AttributeDefinition(_startOrderOBJ);
            _startOrderOBJ.addDescription("The order in which the plugins should be initialized and started. If no\n order is specified, we default to 5. If a plugin depends on data provided by another \n plugin, it should have a later startOrder than the plugin it depends on.");
            _startOrderOBJ.setName("startOrder");
            _startOrderOBJ.setDmdID("702");
            _startOrderOBJ.setType("meta.Integer");
            _startOrderOBJ.setNullReturnValue("5");
            _startOrderOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _startOrderOBJ.setDotName("dmpServer.startOrder.AttributeDefinition");
            _startOrderOBJ.setLineNumber("15");
            _startOrder.setDefinedIn(this);
            addAttributeDefList(_startOrder);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _pluginClassOBJ = new AttributeDefinitionDMO();
            _pluginClass = new AttributeDefinition(_pluginClassOBJ);
            _pluginClassOBJ.addDescription("The fully qualified name of the class derived from DmpServletPlugin\n that implements a plugin's behaviour.");
            _pluginClassOBJ.setName("pluginClass");
            _pluginClassOBJ.setDmdID("703");
            _pluginClassOBJ.setType("meta.String");
            _pluginClassOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _pluginClassOBJ.setDotName("dmpServer.pluginClass.AttributeDefinition");
            _pluginClassOBJ.setLineNumber("22");
            _pluginClass.setDefinedIn(this);
            addAttributeDefList(_pluginClass);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _useSchemaClassOBJ = new AttributeDefinitionDMO();
            _useSchemaClass = new AttributeDefinition(_useSchemaClassOBJ);
            _useSchemaClassOBJ.addDescription("The fully qualified name of a schema class to be loaded on behalf\n of a plugin.");
            _useSchemaClassOBJ.setName("useSchemaClass");
            _useSchemaClassOBJ.setDmdID("704");
            _useSchemaClassOBJ.setType("meta.String");
            _useSchemaClassOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _useSchemaClassOBJ.setDotName("dmpServer.useSchemaClass.AttributeDefinition");
            _useSchemaClassOBJ.setLineNumber("30");
            _useSchemaClassOBJ.setValueType("MULTI");
            _useSchemaClass.setDefinedIn(this);
            addAttributeDefList(_useSchemaClass);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _idRIOBJ = new AttributeDefinitionDMO();
            _idRI = new AttributeDefinition(_idRIOBJ);
            _idRIOBJ.addDescription("The unique id for the instance of something associated with the Reference Implementation (RI).");
            _idRIOBJ.setName("idRI");
            _idRIOBJ.setDmdID("705");
            _idRIOBJ.setType("meta.Integer");
            _idRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _idRIOBJ.setDotName("dmpServer.idRI.AttributeDefinition");
            _idRIOBJ.setLineNumber("36");
            _idRI.setDefinedIn(this);
            addAttributeDefList(_idRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _sessionIDRIOBJ = new AttributeDefinitionDMO();
            _sessionIDRI = new AttributeDefinition(_sessionIDRIOBJ);
            _sessionIDRIOBJ.addDescription("The Tomcat unique session identifer.");
            _sessionIDRIOBJ.setName("sessionIDRI");
            _sessionIDRIOBJ.setDmdID("706");
            _sessionIDRIOBJ.setType("meta.String");
            _sessionIDRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _sessionIDRIOBJ.setDotName("dmpServer.sessionIDRI.AttributeDefinition");
            _sessionIDRIOBJ.setLineNumber("42");
            _sessionIDRI.setDefinedIn(this);
            addAttributeDefList(_sessionIDRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _sessionHostRIOBJ = new AttributeDefinitionDMO();
            _sessionHostRI = new AttributeDefinition(_sessionHostRIOBJ);
            _sessionHostRIOBJ.addDescription("The name of the host associated with a session.");
            _sessionHostRIOBJ.setName("sessionHostRI");
            _sessionHostRIOBJ.setDmdID("707");
            _sessionHostRIOBJ.setType("meta.String");
            _sessionHostRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _sessionHostRIOBJ.setDotName("dmpServer.sessionHostRI.AttributeDefinition");
            _sessionHostRIOBJ.setLineNumber("48");
            _sessionHostRI.setDefinedIn(this);
            addAttributeDefList(_sessionHostRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _userRefRIOBJ = new AttributeDefinitionDMO();
            _userRefRI = new AttributeDefinition(_userRefRIOBJ);
            _userRefRIOBJ.addDescription("The user associated with a session.");
            _userRefRIOBJ.setName("userRefRI");
            _userRefRIOBJ.setDmdID("708");
            _userRefRIOBJ.setType("dmpServer.UserRI");
            _userRefRIOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _userRefRIOBJ.setDotName("dmpServer.userRefRI.AttributeDefinition");
            _userRefRIOBJ.setLineNumber("54");
            _userRefRI.setDefinedIn(this);
            addAttributeDefList(_userRefRI);

// Generated from: org.dmd.dmg.util.SchemaFormatter.getObjectAsCode(SchemaFormatter.java:585)
            AttributeDefinitionDMO _runnableOBJ = new AttributeDefinitionDMO();
            _runnable = new AttributeDefinition(_runnableOBJ);
            _runnableOBJ.addDescription("A flag to indicate if a plugin implements Runnable. If so, once all plugins\n have been initialized, the runnable plugins will be started.");
            _runnableOBJ.setName("runnable");
            _runnableOBJ.setDmdID("709");
            _runnableOBJ.setType("meta.Boolean");
            _runnableOBJ.setFile("/src/org/dmd/dmp/server/servlet/dmdconfig/attributes.dmd");
            _runnableOBJ.setDotName("dmpServer.runnable.AttributeDefinition");
            _runnableOBJ.setLineNumber("61");
            _runnable.setDefinedIn(this);
            addAttributeDefList(_runnable);

    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initTypes() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initComplexTypes() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initActions() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initEnums() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initRules() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpInitFunction(SchemaFormatter.java:313)
    private void initDSDModules() throws DmcValueException {
    }

    // Generated from: org.dmd.dmg.util.SchemaFormatter.dumpSchema(SchemaFormatter.java:272)

    @Override
    public synchronized DmpServerSchemaAG getInstance() throws DmcValueException{
    	   if (instance == null)
    		   initialize();
    	   return(instance);
    }
}

